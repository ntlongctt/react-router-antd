// This file is auto-generated by @hey-api/openapi-ts

import { type Options as ClientOptions, type TDataShape, type Client, formDataBodySerializer, urlSearchParamsBodySerializer } from '@hey-api/client-axios';
import type { GetConfigUsingGetData, GetConfigUsingGetResponse, PutConfigUsingPostData, PutConfigUsingPostResponse, GetConfigByTypeAndNameUsingGetData, GetConfigByTypeAndNameUsingGetResponse, UploadFeedbackLogUsingPostData, UploadFeedbackLogUsingPostResponse, AuthorizeUsingGetData, LogoutUsingPostData, LogoutUsingPostResponse, SignupUsingPostData, SignupUsingPostResponse, TokenEndpointUsingPostData, TokenEndpointUsingPostResponse, ChangePasswordUsingPatchData, ChangePasswordUsingPatchResponse, GetProfileMeUsingGetData, GetProfileMeUsingGetResponse, UpdateProfileUsingPatchData, UpdateProfileUsingPatchResponse, ResetPasswordUsingPostData, ResetPasswordUsingPostResponse, ResetPasswordInitUsingPost1Data, ResetPasswordInitUsingPost1Response, ResendVerificationEmailUsingPatch1Data, ResendVerificationEmailUsingPatch1Response, SendVerificationEmailUsingPostData, SendVerificationEmailUsingPostResponse, GetConfigUsingGet1Data, GetConfigUsingGet1Response, PutConfigUsingPost1Data, PutConfigUsingPost1Response, ListTimezonesUsingGetData, ListTimezonesUsingGetResponse, PutConfigUsingPost2Data, PutConfigUsingPost2Response, DeleteUserConfigurationUsingDeleteData, DeleteUserConfigurationUsingDeleteResponse, GetConfigByIdUsingGetData, GetConfigByIdUsingGetResponse, SearchConfigsUsingPostData, SearchConfigsUsingPostResponse, FeedbackAndRatingUsingPostData, FeedbackAndRatingUsingPostResponse, MultiFeedbackAndRatingUsingPostData, MultiFeedbackAndRatingUsingPostResponse, GetRatingConfigUsingGetData, GetRatingConfigUsingGetResponse, UpdateRatingConfigUsingPostData, UpdateRatingConfigUsingPostResponse, ConfigForceUpdateMoappUsingPostData, ConfigForceUpdateMoappUsingPostResponse, GetForceUpdateMoappUsingGetData, GetForceUpdateMoappUsingGetResponse, BrowseUserTrackingUsingPostData, BrowseUserTrackingUsingPostResponse, WriteUserTrackingUsingPostData, WriteUserTrackingUsingPostResponse, SignupUsingPost1Data, SignupUsingPost1Response, TokenEndpointUsingPost1Data, TokenEndpointUsingPost1Response, ResendVerificationEmailUsingPatchData, ResendVerificationEmailUsingPatchResponse, DeleteMyAccountUsingDeleteData, DeleteMyAccountUsingDeleteResponse, GetAccountProfileUsingGetData, GetAccountProfileUsingGetResponse, UpdateAccountProfileUsingPutData, UpdateAccountProfileUsingPutResponse, ResetPasswordInitUsingPostData, ResetPasswordInitUsingPostResponse, LeaveOrgUsingPostData, LeaveOrgUsingPostResponse, PingUsingGetData, PingUsingGetResponse, CreateOrgUsingPostData, CreateOrgUsingPostResponse, DeleteOrgUsingDeleteData, DeleteOrgUsingDeleteResponse, DetailOrgUsingGetData, DetailOrgUsingGetResponse, ListAdminManagerViewerOrgUsingGetData, ListAdminManagerViewerOrgUsingGetResponse, ListAdminManagerOrgUsingGetData, ListAdminManagerOrgUsingGetResponse, SuspendOrgUsingPutData, SuspendOrgUsingPutResponse, UpdateOrgUsingPutData, UpdateOrgUsingPutResponse, CreateAccountFromInvitationUsingPostData, CreateAccountFromInvitationUsingPostResponse, DeactivateUserUsingPutData, DeactivateUserUsingPutResponse, DeleteInvitationUsingDeleteData, DeleteInvitationUsingDeleteResponse, ListInvitationUsingGetData, ListInvitationUsingGetResponse, PageInvitationUsingGetData, PageInvitationUsingGetResponse, ResendInvitationUsingPostData, ResendInvitationUsingPostResponse, InviteUserUsingPostData, InviteUserUsingPostResponse, ListUserUsingGetData, ListUserUsingGetResponse, ListRouterManagersUsingGetData, ListRouterManagersUsingGetResponse, UpdateUserProfileUsingPutData, UpdateUserProfileUsingPutResponse, DeleteAccountUsingDeleteData, DeleteAccountUsingDeleteResponse, GetUserProfileUsingGetData, GetUserProfileUsingGetResponse, BrowseUserTrackingUsingPost1Data, BrowseUserTrackingUsingPost1Response, WriteUserTrackingUsingPost1Data, WriteUserTrackingUsingPost1Response, ExportUserListUsingPostData, FindUserListUsingPostData, FindUserListUsingPostResponse, GetOpenAppUsingGetData, GetOpenAppUsingGetResponse, AddUserOrganizationUsingPostData, AddUserOrganizationUsingPostResponse, GetAppConfigurationByTypeNameUsingGetData, GetAppConfigurationByTypeNameUsingGetResponse, ChangeAuth0SignKeyUsingGetData, ChangeAuth0SignKeyUsingGetResponse, BatchUsersUsingPostData, BatchUsersUsingPostResponse, FindOrgServiceByIdsUsingPostData, FindOrgServiceByIdsUsingPostResponse, ClearAllUserSessionsUsingPostData, ClearAllUserSessionsUsingPostResponse, DeleteUserOrganizationDeviceManagerUsingPostData, DeleteUserOrganizationDeviceManagerUsingPostResponse, FindOrganizationsAndRelateDataByIdsUsingPostData, FindOrganizationsAndRelateDataByIdsUsingPostResponse, FindOrganizationsByIdsUsingPostData, FindOrganizationsByIdsUsingPostResponse, FindOrganizationsByTagsUsingPostData, FindOrganizationsByTagsUsingPostResponse, FindOrganizationsRelateToUserUsingPostData, FindOrganizationsRelateToUserUsingPostResponse, IsOrgValidUsingGetData, IsOrgValidUsingGetResponse, FindOrgUsingGetData, FindOrgUsingGetResponse, FindOrgDescendantsUsingGetData, FindOrgDescendantsUsingGetResponse, InternalSendReportUserActivityUsingPostData, InternalSendReportUserActivityUsingPostResponse, GetUsersByEmailsUsingPostData, GetUsersByEmailsUsingPostResponse, GetUsersByIdsUsingPostData, GetUsersByIdsUsingPostResponse, GetAndroidInternalUsingGetData, GetIosConnectUsingGetData, GetIosInternalUsingGetData, PemUsingGetData, InvalidLinkUsingGetData, InvalidLinkUsingGetResponse, InvitationSuccessUsingGetData, InvitationSuccessUsingGetResponse, ResetPasswordUsingGetData, ResetPasswordUsingGetResponse, ResetPasswordPortalUsingGetData, ResetPasswordPortalUsingGetResponse, ResetPasswordPortalSuccessUsingGetData, ResetPasswordPortalSuccessUsingGetResponse, ResetPasswordSuccessUsingGetData, ResetPasswordSuccessUsingGetResponse, VerificationSuccessUsingGetData, VerificationSuccessUsingGetResponse, VerifyEmailUsingGetData, VerifyEmailUsingGetResponse, VerifyInvitationUsingGetData, VerifyInvitationUsingGetResponse } from './types.gen';
import { client as _heyApiClient } from './client.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

/**
 * getConfig
 * Endpoint Access Privileges & Rules: authenticated
 */
export const getConfigUsingGet = <ThrowOnError extends boolean = false>(options: Options<GetConfigUsingGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetConfigUsingGetResponse, unknown, ThrowOnError>({
        url: '/api/v1/app-configuration/config',
        ...options
    });
};

/**
 * putConfig
 * Endpoint Access Privileges & Rules: hasAnyRole('ROLE_SUPER_ADMIN')
 */
export const putConfigUsingPost = <ThrowOnError extends boolean = false>(options: Options<PutConfigUsingPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PutConfigUsingPostResponse, unknown, ThrowOnError>({
        url: '/api/v1/app-configuration/config',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * getConfigByTypeAndName
 * Endpoint Access Privileges & Rules: authenticated
 */
export const getConfigByTypeAndNameUsingGet = <ThrowOnError extends boolean = false>(options: Options<GetConfigByTypeAndNameUsingGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetConfigByTypeAndNameUsingGetResponse, unknown, ThrowOnError>({
        url: '/api/v1/app-configuration/config/{type}/{name}',
        ...options
    });
};

/**
 * uploadFeedbackLog
 * Endpoint Access Privileges & Rules: authenticated
 */
export const uploadFeedbackLogUsingPost = <ThrowOnError extends boolean = false>(options: Options<UploadFeedbackLogUsingPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<UploadFeedbackLogUsingPostResponse, unknown, ThrowOnError>({
        ...formDataBodySerializer,
        url: '/api/v1/moapp/feedback-log',
        ...options,
        headers: {
            'Content-Type': null,
            ...options?.headers
        }
    });
};

/**
 * authorize
 * Endpoint Access Privileges & Rules: NONE
 */
export const authorizeUsingGet = <ThrowOnError extends boolean = false>(options: Options<AuthorizeUsingGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<unknown, unknown, ThrowOnError>({
        url: '/api/v1/oauth/authorize',
        ...options
    });
};

/**
 * logout
 * Endpoint Access Privileges & Rules: NONE
 */
export const logoutUsingPost = <ThrowOnError extends boolean = false>(options: Options<LogoutUsingPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<LogoutUsingPostResponse, unknown, ThrowOnError>({
        url: '/api/v1/oauth/logout',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * signup
 * Endpoint Access Privileges & Rules: NONE
 */
export const signupUsingPost = <ThrowOnError extends boolean = false>(options: Options<SignupUsingPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<SignupUsingPostResponse, unknown, ThrowOnError>({
        url: '/api/v1/oauth/signup',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * tokenEndpoint
 * Endpoint Access Privileges & Rules: NONE
 */
export const tokenEndpointUsingPost = <ThrowOnError extends boolean = false>(options: Options<TokenEndpointUsingPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<TokenEndpointUsingPostResponse, unknown, ThrowOnError>({
        ...urlSearchParamsBodySerializer,
        url: '/api/v1/oauth/token',
        ...options,
        headers: {
            'Content-Type': 'application/x-www-form-urlencoded',
            ...options?.headers
        }
    });
};

/**
 * changePassword
 * Endpoint Access Privileges & Rules: authenticated
 */
export const changePasswordUsingPatch = <ThrowOnError extends boolean = false>(options: Options<ChangePasswordUsingPatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).patch<ChangePasswordUsingPatchResponse, unknown, ThrowOnError>({
        url: '/api/v1/profile/change_password',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * getProfileMe
 * Endpoint Access Privileges & Rules: authenticated
 */
export const getProfileMeUsingGet = <ThrowOnError extends boolean = false>(options: Options<GetProfileMeUsingGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetProfileMeUsingGetResponse, unknown, ThrowOnError>({
        url: '/api/v1/profile/me',
        ...options
    });
};

/**
 * updateProfile
 * Endpoint Access Privileges & Rules: authenticated
 */
export const updateProfileUsingPatch = <ThrowOnError extends boolean = false>(options: Options<UpdateProfileUsingPatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).patch<UpdateProfileUsingPatchResponse, unknown, ThrowOnError>({
        url: '/api/v1/profile/me',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * resetPassword
 * Endpoint Access Privileges & Rules: NONE
 */
export const resetPasswordUsingPost = <ThrowOnError extends boolean = false>(options: Options<ResetPasswordUsingPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<ResetPasswordUsingPostResponse, unknown, ThrowOnError>({
        url: '/api/v1/profile/reset_password/finish',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * resetPasswordInit
 * Endpoint Access Privileges & Rules: NONE
 */
export const resetPasswordInitUsingPost1 = <ThrowOnError extends boolean = false>(options: Options<ResetPasswordInitUsingPost1Data, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<ResetPasswordInitUsingPost1Response, unknown, ThrowOnError>({
        url: '/api/v1/profile/reset_password/init',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * resendVerificationEmail
 * Endpoint Access Privileges & Rules: NONE
 */
export const resendVerificationEmailUsingPatch1 = <ThrowOnError extends boolean = false>(options: Options<ResendVerificationEmailUsingPatch1Data, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).patch<ResendVerificationEmailUsingPatch1Response, unknown, ThrowOnError>({
        url: '/api/v1/profile/verification_email',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * sendVerificationEmail
 * Endpoint Access Privileges & Rules: hasAnyRole('ROLE_AUTH0_TRIGGER')
 */
export const sendVerificationEmailUsingPost = <ThrowOnError extends boolean = false>(options: Options<SendVerificationEmailUsingPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<SendVerificationEmailUsingPostResponse, unknown, ThrowOnError>({
        url: '/api/v1/profile/verification_email/new',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * getConfig
 * Endpoint Access Privileges & Rules: authenticated
 */
export const getConfigUsingGet1 = <ThrowOnError extends boolean = false>(options: Options<GetConfigUsingGet1Data, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetConfigUsingGet1Response, unknown, ThrowOnError>({
        url: '/api/v1/quick-tips-config/get',
        ...options
    });
};

/**
 * putConfig
 * Endpoint Access Privileges & Rules: authenticated
 */
export const putConfigUsingPost1 = <ThrowOnError extends boolean = false>(options: Options<PutConfigUsingPost1Data, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PutConfigUsingPost1Response, unknown, ThrowOnError>({
        url: '/api/v1/quick-tips-config/put',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * listTimezones
 * Endpoint Access Privileges & Rules: authenticated
 */
export const listTimezonesUsingGet = <ThrowOnError extends boolean = false>(options: Options<ListTimezonesUsingGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<ListTimezonesUsingGetResponse, unknown, ThrowOnError>({
        url: '/api/v1/timezone/list',
        ...options
    });
};

/**
 * putConfig
 * Endpoint Access Privileges & Rules: authenticated
 */
export const putConfigUsingPost2 = <ThrowOnError extends boolean = false>(options: Options<PutConfigUsingPost2Data, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PutConfigUsingPost2Response, unknown, ThrowOnError>({
        url: '/api/v1/user-configuration/config',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * deleteUserConfiguration
 * Endpoint Access Privileges & Rules: authenticated
 */
export const deleteUserConfigurationUsingDelete = <ThrowOnError extends boolean = false>(options: Options<DeleteUserConfigurationUsingDeleteData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteUserConfigurationUsingDeleteResponse, unknown, ThrowOnError>({
        url: '/api/v1/user-configuration/delete',
        ...options
    });
};

/**
 * getConfigById
 * Endpoint Access Privileges & Rules: authenticated
 */
export const getConfigByIdUsingGet = <ThrowOnError extends boolean = false>(options: Options<GetConfigByIdUsingGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetConfigByIdUsingGetResponse, unknown, ThrowOnError>({
        url: '/api/v1/user-configuration/detail/{id}',
        ...options
    });
};

/**
 * searchConfigs
 * Endpoint Access Privileges & Rules: authenticated
 */
export const searchConfigsUsingPost = <ThrowOnError extends boolean = false>(options: Options<SearchConfigsUsingPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<SearchConfigsUsingPostResponse, unknown, ThrowOnError>({
        url: '/api/v1/user-configuration/search',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * feedbackAndRating
 * Endpoint Access Privileges & Rules: authenticated
 */
export const feedbackAndRatingUsingPost = <ThrowOnError extends boolean = false>(options: Options<FeedbackAndRatingUsingPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<FeedbackAndRatingUsingPostResponse, unknown, ThrowOnError>({
        url: '/api/v1/user-review/feedback-and-rating',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * multiFeedbackAndRating
 * Endpoint Access Privileges & Rules: authenticated
 */
export const multiFeedbackAndRatingUsingPost = <ThrowOnError extends boolean = false>(options: Options<MultiFeedbackAndRatingUsingPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<MultiFeedbackAndRatingUsingPostResponse, unknown, ThrowOnError>({
        url: '/api/v1/user-review/multi-feedback-and-rating',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * getRatingConfig
 * Endpoint Access Privileges & Rules: authenticated
 */
export const getRatingConfigUsingGet = <ThrowOnError extends boolean = false>(options: Options<GetRatingConfigUsingGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetRatingConfigUsingGetResponse, unknown, ThrowOnError>({
        url: '/api/v1/user-review/rating-config',
        ...options
    });
};

/**
 * updateRatingConfig
 * Endpoint Access Privileges & Rules: authenticated
 */
export const updateRatingConfigUsingPost = <ThrowOnError extends boolean = false>(options: Options<UpdateRatingConfigUsingPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<UpdateRatingConfigUsingPostResponse, unknown, ThrowOnError>({
        url: '/api/v1/user-review/update-rating-config',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * configForceUpdateMoapp
 * Endpoint Access Privileges & Rules: authenticated
 */
export const configForceUpdateMoappUsingPost = <ThrowOnError extends boolean = false>(options: Options<ConfigForceUpdateMoappUsingPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<ConfigForceUpdateMoappUsingPostResponse, unknown, ThrowOnError>({
        url: '/api/v1/user/config-force-update-moapp',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * getForceUpdateMoapp
 * Endpoint Access Privileges & Rules: authenticated
 */
export const getForceUpdateMoappUsingGet = <ThrowOnError extends boolean = false>(options: Options<GetForceUpdateMoappUsingGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetForceUpdateMoappUsingGetResponse, unknown, ThrowOnError>({
        url: '/api/v1/user/force-update-moapp',
        ...options
    });
};

/**
 * browseUserTracking
 * Endpoint Access Privileges & Rules: authenticated
 */
export const browseUserTrackingUsingPost = <ThrowOnError extends boolean = false>(options: Options<BrowseUserTrackingUsingPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<BrowseUserTrackingUsingPostResponse, unknown, ThrowOnError>({
        url: '/api/v1/user_tracking/browse',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * writeUserTracking
 * Endpoint Access Privileges & Rules: authenticated
 */
export const writeUserTrackingUsingPost = <ThrowOnError extends boolean = false>(options: Options<WriteUserTrackingUsingPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<WriteUserTrackingUsingPostResponse, unknown, ThrowOnError>({
        url: '/api/v1/user_tracking/write',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * signup
 * Endpoint Access Privileges & Rules: NONE
 */
export const signupUsingPost1 = <ThrowOnError extends boolean = false>(options: Options<SignupUsingPost1Data, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<SignupUsingPost1Response, unknown, ThrowOnError>({
        url: '/api/v2/oauth/signup',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * tokenEndpoint
 * Endpoint Access Privileges & Rules: NONE
 */
export const tokenEndpointUsingPost1 = <ThrowOnError extends boolean = false>(options: Options<TokenEndpointUsingPost1Data, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<TokenEndpointUsingPost1Response, unknown, ThrowOnError>({
        ...urlSearchParamsBodySerializer,
        url: '/api/v2/oauth/token',
        ...options,
        headers: {
            'Content-Type': 'application/x-www-form-urlencoded',
            ...options?.headers
        }
    });
};

/**
 * resendVerificationEmail
 * Endpoint Access Privileges & Rules: NONE
 */
export const resendVerificationEmailUsingPatch = <ThrowOnError extends boolean = false>(options: Options<ResendVerificationEmailUsingPatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).patch<ResendVerificationEmailUsingPatchResponse, unknown, ThrowOnError>({
        url: '/api/v2/oauth/verification_email',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * deleteMyAccount
 * Endpoint Access Privileges & Rules: authenticated
 */
export const deleteMyAccountUsingDelete = <ThrowOnError extends boolean = false>(options: Options<DeleteMyAccountUsingDeleteData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteMyAccountUsingDeleteResponse, unknown, ThrowOnError>({
        url: '/api/v2/portal/account/profile',
        ...options
    });
};

/**
 * getAccountProfile
 * Endpoint Access Privileges & Rules: authenticated
 */
export const getAccountProfileUsingGet = <ThrowOnError extends boolean = false>(options: Options<GetAccountProfileUsingGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetAccountProfileUsingGetResponse, unknown, ThrowOnError>({
        url: '/api/v2/portal/account/profile',
        ...options
    });
};

/**
 * updateAccountProfile
 * Endpoint Access Privileges & Rules: authenticated
 */
export const updateAccountProfileUsingPut = <ThrowOnError extends boolean = false>(options: Options<UpdateAccountProfileUsingPutData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<UpdateAccountProfileUsingPutResponse, unknown, ThrowOnError>({
        ...formDataBodySerializer,
        url: '/api/v2/portal/account/profile',
        ...options,
        headers: {
            'Content-Type': null,
            ...options?.headers
        }
    });
};

/**
 * resetPasswordInit
 * Endpoint Access Privileges & Rules: NONE
 */
export const resetPasswordInitUsingPost = <ThrowOnError extends boolean = false>(options: Options<ResetPasswordInitUsingPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<ResetPasswordInitUsingPostResponse, unknown, ThrowOnError>({
        url: '/api/v2/portal/account/reset_password/init',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * leaveOrg
 * Endpoint Access Privileges & Rules: authenticated
 */
export const leaveOrgUsingPost = <ThrowOnError extends boolean = false>(options: Options<LeaveOrgUsingPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<LeaveOrgUsingPostResponse, unknown, ThrowOnError>({
        url: '/api/v2/portal/account/unlink',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * ping
 * Endpoint Access Privileges & Rules: NONE
 */
export const pingUsingGet = <ThrowOnError extends boolean = false>(options: Options<PingUsingGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<PingUsingGetResponse, unknown, ThrowOnError>({
        url: '/api/v2/portal/monitor/ping',
        ...options
    });
};

/**
 * createOrg
 * Endpoint Access Privileges & Rules: hasAnyRole('ROLE_ADMIN')
 */
export const createOrgUsingPost = <ThrowOnError extends boolean = false>(options: Options<CreateOrgUsingPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<CreateOrgUsingPostResponse, unknown, ThrowOnError>({
        ...formDataBodySerializer,
        url: '/api/v2/portal/org/create',
        ...options,
        headers: {
            'Content-Type': null,
            ...options?.headers
        }
    });
};

/**
 * deleteOrg
 * Endpoint Access Privileges & Rules: hasAnyRole('ROLE_ADMIN')
 */
export const deleteOrgUsingDelete = <ThrowOnError extends boolean = false>(options: Options<DeleteOrgUsingDeleteData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteOrgUsingDeleteResponse, unknown, ThrowOnError>({
        url: '/api/v2/portal/org/delete',
        ...options
    });
};

/**
 * detailOrg
 * Endpoint Access Privileges & Rules: hasAnyRole('ROLE_ADMIN', 'ROLE_MANAGER', 'ROLE_VIEWER', 'ROLE_DEVICE_MANAGER', 'ROLE_DEVICE_VIEWER')
 */
export const detailOrgUsingGet = <ThrowOnError extends boolean = false>(options: Options<DetailOrgUsingGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<DetailOrgUsingGetResponse, unknown, ThrowOnError>({
        url: '/api/v2/portal/org/detail/{id}',
        ...options
    });
};

/**
 * listAdminManagerViewerOrg
 * Endpoint Access Privileges & Rules: hasAnyRole('ROLE_ADMIN', 'ROLE_MANAGER', 'ROLE_VIEWER')
 */
export const listAdminManagerViewerOrgUsingGet = <ThrowOnError extends boolean = false>(options: Options<ListAdminManagerViewerOrgUsingGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<ListAdminManagerViewerOrgUsingGetResponse, unknown, ThrowOnError>({
        url: '/api/v2/portal/org/group/org/all',
        ...options
    });
};

/**
 * listAdminManagerOrg
 * Endpoint Access Privileges & Rules: hasAnyRole('ROLE_ADMIN', 'ROLE_MANAGER')
 */
export const listAdminManagerOrgUsingGet = <ThrowOnError extends boolean = false>(options: Options<ListAdminManagerOrgUsingGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<ListAdminManagerOrgUsingGetResponse, unknown, ThrowOnError>({
        url: '/api/v2/portal/org/group/org/modify',
        ...options
    });
};

/**
 * suspendOrg
 * Endpoint Access Privileges & Rules: hasAnyRole('ROLE_ADMIN')
 */
export const suspendOrgUsingPut = <ThrowOnError extends boolean = false>(options: Options<SuspendOrgUsingPutData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<SuspendOrgUsingPutResponse, unknown, ThrowOnError>({
        url: '/api/v2/portal/org/suspend',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * updateOrg
 * Endpoint Access Privileges & Rules: hasAnyRole('ROLE_ADMIN')
 */
export const updateOrgUsingPut = <ThrowOnError extends boolean = false>(options: Options<UpdateOrgUsingPutData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<UpdateOrgUsingPutResponse, unknown, ThrowOnError>({
        ...formDataBodySerializer,
        url: '/api/v2/portal/org/update',
        ...options,
        headers: {
            'Content-Type': null,
            ...options?.headers
        }
    });
};

/**
 * createAccountFromInvitation
 * Endpoint Access Privileges & Rules: NONE
 */
export const createAccountFromInvitationUsingPost = <ThrowOnError extends boolean = false>(options: Options<CreateAccountFromInvitationUsingPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<CreateAccountFromInvitationUsingPostResponse, unknown, ThrowOnError>({
        url: '/api/v2/portal/user/create-account-1',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * deactivateUser
 * Endpoint Access Privileges & Rules: hasAnyRole('ROLE_ADMIN')
 */
export const deactivateUserUsingPut = <ThrowOnError extends boolean = false>(options: Options<DeactivateUserUsingPutData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<DeactivateUserUsingPutResponse, unknown, ThrowOnError>({
        url: '/api/v2/portal/user/deactivate-user',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * deleteInvitation
 * Endpoint Access Privileges & Rules: hasAnyRole('ROLE_ADMIN')
 */
export const deleteInvitationUsingDelete = <ThrowOnError extends boolean = false>(options: Options<DeleteInvitationUsingDeleteData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteInvitationUsingDeleteResponse, unknown, ThrowOnError>({
        url: '/api/v2/portal/user/invitation/delete',
        ...options
    });
};

/**
 * listInvitation
 * Endpoint Access Privileges & Rules: hasAnyRole('ROLE_ADMIN', 'ROLE_MANAGER')
 */
export const listInvitationUsingGet = <ThrowOnError extends boolean = false>(options: Options<ListInvitationUsingGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<ListInvitationUsingGetResponse, unknown, ThrowOnError>({
        url: '/api/v2/portal/user/invitation/list',
        ...options
    });
};

/**
 * pageInvitation
 * Endpoint Access Privileges & Rules: hasAnyRole('ROLE_ADMIN', 'ROLE_MANAGER')
 */
export const pageInvitationUsingGet = <ThrowOnError extends boolean = false>(options: Options<PageInvitationUsingGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<PageInvitationUsingGetResponse, unknown, ThrowOnError>({
        url: '/api/v2/portal/user/invitation/page',
        ...options
    });
};

/**
 * resendInvitation
 * Endpoint Access Privileges & Rules: hasAnyRole('ROLE_ADMIN')
 */
export const resendInvitationUsingPost = <ThrowOnError extends boolean = false>(options: Options<ResendInvitationUsingPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<ResendInvitationUsingPostResponse, unknown, ThrowOnError>({
        url: '/api/v2/portal/user/invitation/resend',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * inviteUser
 * Endpoint Access Privileges & Rules: hasAnyRole('ROLE_ADMIN')
 */
export const inviteUserUsingPost = <ThrowOnError extends boolean = false>(options: Options<InviteUserUsingPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<InviteUserUsingPostResponse, unknown, ThrowOnError>({
        url: '/api/v2/portal/user/invite',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * listUser
 * Endpoint Access Privileges & Rules: hasAnyRole('ROLE_ADMIN', 'ROLE_MANAGER', 'ROLE_VIEWER')
 */
export const listUserUsingGet = <ThrowOnError extends boolean = false>(options: Options<ListUserUsingGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<ListUserUsingGetResponse, unknown, ThrowOnError>({
        url: '/api/v2/portal/user/list',
        ...options
    });
};

/**
 * listRouterManagers
 * Endpoint Access Privileges & Rules: hasAnyRole('ROLE_ADMIN', 'ROLE_MANAGER', 'ROLE_DEVICE_MANAGER')
 */
export const listRouterManagersUsingGet = <ThrowOnError extends boolean = false>(options: Options<ListRouterManagersUsingGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<ListRouterManagersUsingGetResponse, unknown, ThrowOnError>({
        url: '/api/v2/portal/user/list/router-managers',
        ...options
    });
};

/**
 * updateUserProfile
 * Endpoint Access Privileges & Rules: hasAnyRole('ROLE_ADMIN')
 */
export const updateUserProfileUsingPut = <ThrowOnError extends boolean = false>(options: Options<UpdateUserProfileUsingPutData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<UpdateUserProfileUsingPutResponse, unknown, ThrowOnError>({
        url: '/api/v2/portal/user/profile',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * deleteAccount
 * Endpoint Access Privileges & Rules: hasAnyRole('ROLE_ADMIN')
 */
export const deleteAccountUsingDelete = <ThrowOnError extends boolean = false>(options: Options<DeleteAccountUsingDeleteData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteAccountUsingDeleteResponse, unknown, ThrowOnError>({
        url: '/api/v2/portal/user/profile/{id}',
        ...options
    });
};

/**
 * getUserProfile
 * Endpoint Access Privileges & Rules: hasAnyRole('ROLE_ADMIN', 'ROLE_MANAGER', 'ROLE_VIEWER')
 */
export const getUserProfileUsingGet = <ThrowOnError extends boolean = false>(options: Options<GetUserProfileUsingGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetUserProfileUsingGetResponse, unknown, ThrowOnError>({
        url: '/api/v2/portal/user/profile/{id}',
        ...options
    });
};

/**
 * browseUserTracking
 * Endpoint Access Privileges & Rules: authenticated
 */
export const browseUserTrackingUsingPost1 = <ThrowOnError extends boolean = false>(options: Options<BrowseUserTrackingUsingPost1Data, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<BrowseUserTrackingUsingPost1Response, unknown, ThrowOnError>({
        url: '/api/v2/user_tracking/browse',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * writeUserTracking
 * Endpoint Access Privileges & Rules: authenticated
 */
export const writeUserTrackingUsingPost1 = <ThrowOnError extends boolean = false>(options: Options<WriteUserTrackingUsingPost1Data, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<WriteUserTrackingUsingPost1Response, unknown, ThrowOnError>({
        url: '/api/v2/user_tracking/write',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * exportUserList
 * Endpoint Access Privileges & Rules: hasAnyRole('ROLE_SUPER_ADMIN')
 */
export const exportUserListUsingPost = <ThrowOnError extends boolean = false>(options: Options<ExportUserListUsingPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<unknown, unknown, ThrowOnError>({
        url: '/api/v3/portal/user/export',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * findUserList
 * Endpoint Access Privileges & Rules: hasAnyRole('ROLE_ADMIN', 'ROLE_MANAGER', 'ROLE_VIEWER')
 */
export const findUserListUsingPost = <ThrowOnError extends boolean = false>(options: Options<FindUserListUsingPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<FindUserListUsingPostResponse, unknown, ThrowOnError>({
        url: '/api/v3/portal/user/list',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * getOpenApp
 * Endpoint Access Privileges & Rules: NONE
 */
export const getOpenAppUsingGet = <ThrowOnError extends boolean = false>(options: Options<GetOpenAppUsingGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetOpenAppUsingGetResponse, unknown, ThrowOnError>({
        url: '/apple-app-site-association',
        ...options
    });
};

/**
 * addUserOrganization
 * Endpoint Access Privileges & Rules: NONE
 */
export const addUserOrganizationUsingPost = <ThrowOnError extends boolean = false>(options: Options<AddUserOrganizationUsingPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<AddUserOrganizationUsingPostResponse, unknown, ThrowOnError>({
        url: '/internal/add-user-organization',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * getAppConfigurationByTypeName
 * Endpoint Access Privileges & Rules: NONE
 */
export const getAppConfigurationByTypeNameUsingGet = <ThrowOnError extends boolean = false>(options: Options<GetAppConfigurationByTypeNameUsingGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetAppConfigurationByTypeNameUsingGetResponse, unknown, ThrowOnError>({
        url: '/internal/app-configuration/config/{type}/{name}',
        ...options
    });
};

/**
 * changeAuth0SignKey
 * Endpoint Access Privileges & Rules: NONE
 */
export const changeAuth0SignKeyUsingGet = <ThrowOnError extends boolean = false>(options: Options<ChangeAuth0SignKeyUsingGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<ChangeAuth0SignKeyUsingGetResponse, unknown, ThrowOnError>({
        url: '/internal/auth0/change/signkey',
        ...options
    });
};

/**
 * batchUsers
 * Endpoint Access Privileges & Rules: NONE
 */
export const batchUsersUsingPost = <ThrowOnError extends boolean = false>(options: Options<BatchUsersUsingPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<BatchUsersUsingPostResponse, unknown, ThrowOnError>({
        url: '/internal/batch-users',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * findOrgServiceByIds
 * Endpoint Access Privileges & Rules: NONE
 */
export const findOrgServiceByIdsUsingPost = <ThrowOnError extends boolean = false>(options: Options<FindOrgServiceByIdsUsingPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<FindOrgServiceByIdsUsingPostResponse, unknown, ThrowOnError>({
        url: '/internal/cache/find-org-service-by-ids',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * clearAllUserSessions
 * Endpoint Access Privileges & Rules: NONE
 */
export const clearAllUserSessionsUsingPost = <ThrowOnError extends boolean = false>(options: Options<ClearAllUserSessionsUsingPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<ClearAllUserSessionsUsingPostResponse, unknown, ThrowOnError>({
        url: '/internal/clear-all-user-sessions',
        ...options
    });
};

/**
 * deleteUserOrganizationDeviceManager
 * Endpoint Access Privileges & Rules: NONE
 */
export const deleteUserOrganizationDeviceManagerUsingPost = <ThrowOnError extends boolean = false>(options: Options<DeleteUserOrganizationDeviceManagerUsingPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<DeleteUserOrganizationDeviceManagerUsingPostResponse, unknown, ThrowOnError>({
        url: '/internal/delete-user-organization-device-manager',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * findOrganizationsAndRelateDataByIds
 * Endpoint Access Privileges & Rules: NONE
 */
export const findOrganizationsAndRelateDataByIdsUsingPost = <ThrowOnError extends boolean = false>(options: Options<FindOrganizationsAndRelateDataByIdsUsingPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<FindOrganizationsAndRelateDataByIdsUsingPostResponse, unknown, ThrowOnError>({
        url: '/internal/find-org-and-relate-data-by-ids',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * findOrganizationsByIds
 * Endpoint Access Privileges & Rules: NONE
 */
export const findOrganizationsByIdsUsingPost = <ThrowOnError extends boolean = false>(options: Options<FindOrganizationsByIdsUsingPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<FindOrganizationsByIdsUsingPostResponse, unknown, ThrowOnError>({
        url: '/internal/find-organizations-by-ids',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * findOrganizationsByTags
 * Endpoint Access Privileges & Rules: NONE
 */
export const findOrganizationsByTagsUsingPost = <ThrowOnError extends boolean = false>(options: Options<FindOrganizationsByTagsUsingPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<FindOrganizationsByTagsUsingPostResponse, unknown, ThrowOnError>({
        url: '/internal/find-organizations-by-tags',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * findOrganizationsRelateToUser
 * Endpoint Access Privileges & Rules: NONE
 */
export const findOrganizationsRelateToUserUsingPost = <ThrowOnError extends boolean = false>(options: Options<FindOrganizationsRelateToUserUsingPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<FindOrganizationsRelateToUserUsingPostResponse, unknown, ThrowOnError>({
        url: '/internal/find-organizations-group',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * isOrgValid
 * Endpoint Access Privileges & Rules: NONE
 */
export const isOrgValidUsingGet = <ThrowOnError extends boolean = false>(options: Options<IsOrgValidUsingGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<IsOrgValidUsingGetResponse, unknown, ThrowOnError>({
        url: '/internal/is-org-valid',
        ...options
    });
};

/**
 * findOrg
 * Endpoint Access Privileges & Rules: NONE
 */
export const findOrgUsingGet = <ThrowOnError extends boolean = false>(options: Options<FindOrgUsingGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<FindOrgUsingGetResponse, unknown, ThrowOnError>({
        url: '/internal/org/find/{id}',
        ...options
    });
};

/**
 * findOrgDescendants
 * Endpoint Access Privileges & Rules: NONE
 */
export const findOrgDescendantsUsingGet = <ThrowOnError extends boolean = false>(options: Options<FindOrgDescendantsUsingGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<FindOrgDescendantsUsingGetResponse, unknown, ThrowOnError>({
        url: '/internal/org/find_descendants/{id}',
        ...options
    });
};

/**
 * internalSendReportUserActivity
 * Endpoint Access Privileges & Rules: NONE
 */
export const internalSendReportUserActivityUsingPost = <ThrowOnError extends boolean = false>(options: Options<InternalSendReportUserActivityUsingPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<InternalSendReportUserActivityUsingPostResponse, unknown, ThrowOnError>({
        url: '/internal/report/send-report-user-activity',
        ...options
    });
};

/**
 * getUsersByEmails
 * Endpoint Access Privileges & Rules: NONE
 */
export const getUsersByEmailsUsingPost = <ThrowOnError extends boolean = false>(options: Options<GetUsersByEmailsUsingPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<GetUsersByEmailsUsingPostResponse, unknown, ThrowOnError>({
        url: '/internal/user/find-by-emails',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * getUsersByIds
 * Endpoint Access Privileges & Rules: NONE
 */
export const getUsersByIdsUsingPost = <ThrowOnError extends boolean = false>(options: Options<GetUsersByIdsUsingPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<GetUsersByIdsUsingPostResponse, unknown, ThrowOnError>({
        url: '/internal/user/find-by-ids',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * getAndroidInternal
 * Endpoint Access Privileges & Rules: NONE
 */
export const getAndroidInternalUsingGet = <ThrowOnError extends boolean = false>(options: Options<GetAndroidInternalUsingGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<unknown, unknown, ThrowOnError>({
        url: '/openapp/android/internal',
        ...options
    });
};

/**
 * getIOSConnect
 * Endpoint Access Privileges & Rules: NONE
 */
export const getIosConnectUsingGet = <ThrowOnError extends boolean = false>(options: Options<GetIosConnectUsingGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<unknown, unknown, ThrowOnError>({
        url: '/openapp/ios/connect',
        ...options
    });
};

/**
 * getIOSInternal
 * Endpoint Access Privileges & Rules: NONE
 */
export const getIosInternalUsingGet = <ThrowOnError extends boolean = false>(options: Options<GetIosInternalUsingGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<unknown, unknown, ThrowOnError>({
        url: '/openapp/ios/internal',
        ...options
    });
};

/**
 * pem
 * Endpoint Access Privileges & Rules: NONE
 */
export const pemUsingGet = <ThrowOnError extends boolean = false>(options: Options<PemUsingGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<unknown, unknown, ThrowOnError>({
        responseType: 'blob',
        url: '/public/cert/pem',
        ...options
    });
};

/**
 * invalidLink
 * Endpoint Access Privileges & Rules: NONE
 */
export const invalidLinkUsingGet = <ThrowOnError extends boolean = false>(options: Options<InvalidLinkUsingGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<InvalidLinkUsingGetResponse, unknown, ThrowOnError>({
        url: '/ui/invalid-link',
        ...options
    });
};

/**
 * invitationSuccess
 * Endpoint Access Privileges & Rules: NONE
 */
export const invitationSuccessUsingGet = <ThrowOnError extends boolean = false>(options: Options<InvitationSuccessUsingGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<InvitationSuccessUsingGetResponse, unknown, ThrowOnError>({
        url: '/ui/invitation-success',
        ...options
    });
};

/**
 * resetPassword
 * Endpoint Access Privileges & Rules: NONE
 */
export const resetPasswordUsingGet = <ThrowOnError extends boolean = false>(options: Options<ResetPasswordUsingGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<ResetPasswordUsingGetResponse, unknown, ThrowOnError>({
        url: '/ui/reset-password',
        ...options
    });
};

/**
 * resetPasswordPortal
 * Endpoint Access Privileges & Rules: NONE
 */
export const resetPasswordPortalUsingGet = <ThrowOnError extends boolean = false>(options: Options<ResetPasswordPortalUsingGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<ResetPasswordPortalUsingGetResponse, unknown, ThrowOnError>({
        url: '/ui/reset-password-portal',
        ...options
    });
};

/**
 * resetPasswordPortalSuccess
 * Endpoint Access Privileges & Rules: NONE
 */
export const resetPasswordPortalSuccessUsingGet = <ThrowOnError extends boolean = false>(options: Options<ResetPasswordPortalSuccessUsingGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<ResetPasswordPortalSuccessUsingGetResponse, unknown, ThrowOnError>({
        url: '/ui/reset-password-portal-success',
        ...options
    });
};

/**
 * resetPasswordSuccess
 * Endpoint Access Privileges & Rules: NONE
 */
export const resetPasswordSuccessUsingGet = <ThrowOnError extends boolean = false>(options: Options<ResetPasswordSuccessUsingGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<ResetPasswordSuccessUsingGetResponse, unknown, ThrowOnError>({
        url: '/ui/reset-password-success',
        ...options
    });
};

/**
 * verificationSuccess
 * Endpoint Access Privileges & Rules: NONE
 */
export const verificationSuccessUsingGet = <ThrowOnError extends boolean = false>(options: Options<VerificationSuccessUsingGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<VerificationSuccessUsingGetResponse, unknown, ThrowOnError>({
        url: '/ui/verification-success',
        ...options
    });
};

/**
 * verifyEmail
 * Endpoint Access Privileges & Rules: NONE
 */
export const verifyEmailUsingGet = <ThrowOnError extends boolean = false>(options: Options<VerifyEmailUsingGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<VerifyEmailUsingGetResponse, unknown, ThrowOnError>({
        url: '/ui/verify-email',
        ...options
    });
};

/**
 * verifyInvitation
 * Endpoint Access Privileges & Rules: NONE
 */
export const verifyInvitationUsingGet = <ThrowOnError extends boolean = false>(options: Options<VerifyInvitationUsingGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<VerifyInvitationUsingGetResponse, unknown, ThrowOnError>({
        url: '/ui/verify-invitation',
        ...options
    });
};