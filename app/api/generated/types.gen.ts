// This file is auto-generated by @hey-api/openapi-ts

export type AccountProfileResponse = {
    allowed_services?: Array<AllowedService>;
    email?: string;
    force_update_moapp?: boolean;
    id?: string;
    last_login?: string;
    mobile_phone?: string;
    name?: string;
    org_role_list?: Array<OrgRoleResponse>;
    picture?: string;
    rating_config?: RatingConfigResponse;
    roles?: Array<string>;
    status?: 'ACTIVE' | 'DEACTIVATED' | 'UNVERIFIED';
    user_configs?: Array<UserConfig>;
    zone_id?: string;
};

export type AddUserOrganizationRequest = {
    org_id?: string;
    user_id?: string;
};

export type AllowedService = {
    org_ids?: Array<string>;
    service?: string;
};

export type AppConfigurationBrowseResponse = {
    configs?: Array<AppConfigurationResponse>;
};

export type AppConfigurationRequest = {
    desc?: string;
    name?: string;
    type?: string;
    value?: string;
};

export type AppConfigurationResponse = {
    created_date?: string;
    desc?: string;
    id?: string;
    modified_date?: string;
    name?: string;
    type?: string;
    value?: string;
};

export type AppMetadata = {
    roles?: Array<string>;
};

export type BatchUsersRequest = {
    params?: {
        [key: string]: Array<string>;
    };
    user_id?: string;
};

export type BrowseCustomOutput = {
    names?: Array<string>;
};

export type BrowseFilter = {
    org_ids?: Array<string>;
    roles?: Array<string>;
    search_text?: string;
    statuses?: Array<string>;
};

export type BrowseSort = {
    sort?: string;
};

export type BrowseUserExportRequest = {
    custom_output?: BrowseCustomOutput;
    filter?: BrowseFilter;
    sort?: BrowseSort;
};

export type ChangePasswordRequest = {
    new_password?: string;
};

export type CreateAccountFromInvitation = {
    key?: string;
    password?: string;
};

export type DeactivateUserRequest = {
    deactivate_flag: boolean;
    user_id?: string;
};

export type DeleteInvitationRequest = {
    request_id?: string;
};

export type DeleteOrgRequest = {
    org_id?: string;
};

export type DeleteUserOrganizationRequest = {
    org_id?: string;
    user_id?: string;
};

export type _Error = {
    code?: string;
    id?: string;
    message?: string;
    meta?: {
        [key: string]: unknown;
    };
};

export type FeedbackRatingRequest = {
    comment?: string;
    dont_ask_again?: boolean;
    is_later?: boolean;
    rating?: number;
    type?: string;
};

export type FeedbackRatingResponse = {
    app_version?: string;
    comment?: string;
    created_date?: string;
    device_os?: string;
    dont_ask_again?: boolean;
    id?: string;
    is_later?: boolean;
    rating?: number;
    type?: string;
    user_id?: string;
};

export type File = {
    absolute?: boolean;
    absoluteFile?: File;
    absolutePath?: string;
    canonicalFile?: File;
    canonicalPath?: string;
    directory?: boolean;
    file?: boolean;
    freeSpace?: number;
    hidden?: boolean;
    name?: string;
    parent?: string;
    parentFile?: File;
    path?: string;
    totalSpace?: number;
    usableSpace?: number;
};

export type Filter = {
    end?: number;
    event_names?: Array<string>;
    imei?: string;
    start?: number;
    user_id?: string;
};

export type FindGroupOrganizationsRequest = {
    filter_user_id?: string;
    user_id?: string;
};

export type FindOrganizationsByIdsRequest = {
    ids?: Array<string>;
};

export type FindOrganizationsByTagsRequest = {
    tags?: Array<string>;
};

export type FindUserListV3Request = {
    org_ids?: Array<string>;
    page?: number;
    roles?: Array<string>;
    search_text?: string;
    size?: number;
    sort?: string;
    status?: Array<string>;
};

export type ForceUpdateMoappRequest = {
    force_update_moapp: boolean;
};

export type ForceUpdateMoappResponse = {
    force_update_moapp?: boolean;
};

export type Identity = {
    connection?: string;
    isSocial?: boolean;
    profileData?: {
        [key: string]: unknown;
    };
    provider?: string;
    user_id?: string;
};

export type InputStream = {
    [key: string]: unknown;
};

export type InvitationResponse = {
    email?: string;
    expired?: boolean;
    expired_date?: number;
    has_other_orgs?: boolean;
    id?: string;
    invitation_date?: string;
    org_role_list?: Array<OrgRoleResponse>;
    readonly?: boolean;
    updated_by?: string;
};

export type LeaveOrgRequest = {
    org_id?: string;
};

export type ListIdRequest = {
    ids?: Array<string>;
};

export type ListResponse_InvitationResponse_ = {
    data?: Array<InvitationResponse>;
    error?: _Error;
    meta?: {
        [key: string]: unknown;
    };
    pagination?: {
        [key: string]: unknown;
    };
};

export type ListResponse_ProxyOrganization_ = {
    data?: Array<ProxyOrganization>;
    error?: _Error;
    meta?: {
        [key: string]: unknown;
    };
    pagination?: {
        [key: string]: unknown;
    };
};

export type ListResponse_RouterManagerResponse_ = {
    data?: Array<RouterManagerResponse>;
    error?: _Error;
    meta?: {
        [key: string]: unknown;
    };
    pagination?: {
        [key: string]: unknown;
    };
};

export type ListResponse_ShortOrgResponse_ = {
    data?: Array<ShortOrgResponse>;
    error?: _Error;
    meta?: {
        [key: string]: unknown;
    };
    pagination?: {
        [key: string]: unknown;
    };
};

export type ListResponse_ShortUserResponse_ = {
    data?: Array<ShortUserResponse>;
    error?: _Error;
    meta?: {
        [key: string]: unknown;
    };
    pagination?: {
        [key: string]: unknown;
    };
};

export type LogoutRequest = {
    client_id?: string;
    token?: string;
};

export type LongOrgResponse = {
    address?: string;
    allow_org_admin?: number;
    allow_sub_orgs?: boolean;
    city?: string;
    country?: string;
    created_date?: string;
    desc?: string;
    disallow_assets?: boolean;
    email?: string;
    id?: string;
    key?: string;
    logo?: string;
    name?: string;
    parent?: ShortOrgResponse;
    phone?: string;
    readonly?: boolean;
    services?: Array<OrganizationServiceResponse>;
    state?: string;
    street?: string;
    street_number?: string;
    subscription_team_email?: string;
    suspended?: boolean;
    system?: boolean;
    technical_support_team_email?: string;
    zip_code?: string;
};

export type ManagerSession = {
    admin_modify_list_id?: Array<string>;
    block_org_list_id?: Array<string>;
    device_list?: Array<OrganizationData>;
    device_modify_list_id?: Array<string>;
    filter_all_org?: boolean;
    filter_user_id?: string;
    filter_user_org_list_id?: Array<string>;
    full_org_list_id?: Array<string>;
    last_updated?: number;
    org_list?: Array<OrganizationData>;
    org_modify_list_id?: Array<string>;
    role_list?: Array<RoleData>;
    service_list_by_org?: {
        [key: string]: Array<ServiceData>;
    };
    user_id?: string;
    user_org_list?: Array<UserOrgData>;
    zone_id?: string;
};

export type Map_string_List_userData__ = {
    [key: string]: List;
};

export type List = Array<unknown>;

export type MoappFeedbackLogResponse = {
    comment?: string;
    file_id?: string;
    file_url?: string;
    id?: string;
};

export type MultiFeedbackAndRatingRequest = {
    items?: Array<FeedbackRatingRequest>;
};

export type MultiFeedbackAndRatingResponse = {
    items?: Array<FeedbackRatingResponse>;
};

export type Oauth2ProfileResponse = {
    email?: string;
    email_verified?: boolean;
    family_name?: string;
    force_update_moapp?: boolean;
    from_simplifi_email?: string;
    given_name?: string;
    name?: string;
    picture?: string;
    rating_config?: RatingConfigResponse;
    user_id?: string;
    zone_id?: string;
};

export type Oauth2SignupResponse = {
    email?: string;
    email_verified?: boolean;
    family_name?: string;
    from_simplifi_email?: string;
    given_name?: string;
    name?: string;
    nickname?: string;
    picture?: string;
    session_key?: string;
    user_id?: string;
    username?: string;
};

export type Oauth2TokenResponse = {
    access_token?: string;
    expires_in?: number;
    id_token?: string;
    refresh_token?: string;
    relogin_required?: boolean;
    scope?: string;
    token_type?: string;
};

export type OrgAndRelateDataResponse = {
    ancestors?: Array<string>;
    id?: string;
    key?: string;
    logo?: string;
    name?: string;
    parent?: string;
    services?: Array<OrganizationServiceResponse>;
    subscription_team_email?: string;
    suspended?: boolean;
    technical_support_team_email?: string;
};

export type OrgRoleRequest = {
    org_id?: string;
    role_name?: string;
};

export type OrgRoleResponse = {
    allow_org_admin?: number;
    allow_sub_orgs?: boolean;
    created_date?: number;
    disallow_assets?: boolean;
    org_id?: string;
    org_key?: string;
    org_logo?: string;
    org_name?: string;
    organizationRole?: string;
    readonly?: boolean;
    role_name?: string;
    services?: Array<OrganizationServiceResponse>;
    suspended?: boolean;
    system?: boolean;
};

export type OrgServiceCacheData = {
    ancestors?: Array<string>;
    id?: string;
    key?: string;
    logo?: string;
    name?: string;
    parent?: string;
    services?: Array<OrgServiceData>;
    subscription_team_email?: string;
    suspended?: boolean;
    technical_support_team_email?: string;
};

export type OrgServiceData = {
    org_id?: string;
    service?: string;
    status?: string;
};

export type OrganizationData = {
    address?: string;
    allow_org_admin?: number;
    allow_sub_orgs?: boolean;
    ancestors?: Array<string>;
    city?: string;
    country?: string;
    created_date?: string;
    desc?: string;
    disallow_assets?: boolean;
    email?: string;
    id?: string;
    key?: string;
    logo?: string;
    name?: string;
    parent?: string;
    phone?: string;
    readonly?: boolean;
    roles?: Array<RoleData>;
    services?: Array<ServiceData>;
    state?: string;
    street?: string;
    street_number?: string;
    subscription_team_email?: string;
    suspended?: boolean;
    suspended_by_org?: string;
    system?: boolean;
    technical_support_team_email?: string;
    zip_cde?: string;
};

export type OrganizationInfo = {
    logo?: string;
    name?: string;
    org_id?: string;
};

export type OrganizationServiceResponse = {
    org_id?: string;
    service?: string;
    status?: string;
};

export type PageInfo = {
    page?: number;
    size?: number;
    total_elements?: number;
    total_pages?: number;
};

export type ProxyOrganization = {
    ancestors?: Array<string>;
    id?: string;
    key?: string;
    logo?: string;
    name?: string;
    parent?: string;
    suspended?: boolean;
};

export type QuickTipsConfigRequest = {
    index: number;
    show_when_login?: boolean;
};

export type QuickTipsConfigResponse = {
    index?: number;
    show_when_login?: boolean;
};

export type RatingConfigResponse = {
    do_not_ask_rating?: boolean;
    updated_time?: string;
};

export type ResendInvitationRequest = {
    request_id?: string;
};

export type ResendVerificationEmailRequest = {
    user_id?: string;
};

export type ResendVerificationEmailRequestV2 = {
    session_key?: string;
    user_id?: string;
};

export type ResetPasswordFinishRequest = {
    key?: string;
    new_password?: string;
};

export type ResetPasswordInitRequest = {
    email?: string;
};

export type Resource = {
    description?: string;
    file?: File;
    filename?: string;
    inputStream?: InputStream;
    open?: boolean;
    readable?: boolean;
    uri?: Uri;
    url?: Url;
};

export type RoleData = {
    id?: string;
    key?: string;
    name?: string;
};

export type RouterManagerResponse = {
    email?: string;
    name?: string;
    picture?: string;
    status?: string;
    user_id?: string;
};

export type SendInvitationRequest = {
    email?: string;
    org_role_list?: Array<OrgRoleRequest>;
};

export type SendInvitationResponse = {
    id?: string;
};

export type SendVerificationEmailRequest = {
    email?: string;
    user_id?: string;
};

export type ServiceData = {
    name?: string;
    status?: string;
};

export type ShortOrgResponse = {
    address?: string;
    allow_org_admin?: number;
    allow_sub_orgs?: boolean;
    created_date?: string;
    desc?: string;
    disallow_assets?: boolean;
    email?: string;
    id?: string;
    key?: string;
    logo?: string;
    name?: string;
    parent?: string;
    phone?: string;
    readonly?: boolean;
    roles?: Array<RoleData>;
    services?: Array<OrganizationServiceResponse>;
    suspended?: boolean;
    system?: boolean;
};

export type ShortUserResponse = {
    allow_deactivate?: boolean;
    blocked?: boolean;
    email?: string;
    email_verified?: boolean;
    family_name?: string;
    given_name?: string;
    id?: string;
    last_login?: string;
    mobile_phone?: string;
    name?: string;
    nickname?: string;
    org_role_list?: Array<OrgRoleResponse>;
    picture?: string;
    readonly?: boolean;
    status?: string;
};

export type SignupRequest = {
    client_id?: string;
    email?: string;
    family_name?: string;
    given_name?: string;
    name?: string;
    nickname?: string;
    password?: string;
    picture?: string;
    user_metadata?: {
        [key: string]: unknown;
    };
    username?: string;
};

export type StandardResponse = {
    data?: {
        [key: string]: unknown;
    };
    error?: _Error;
    meta?: {
        [key: string]: unknown;
    };
};

export type StandardResponse_AccountProfileResponse_ = {
    data?: AccountProfileResponse;
    error?: _Error;
    meta?: {
        [key: string]: unknown;
    };
};

export type StandardResponse_AppConfigurationBrowseResponse_ = {
    data?: AppConfigurationBrowseResponse;
    error?: _Error;
    meta?: {
        [key: string]: unknown;
    };
};

export type StandardResponse_AppConfigurationResponse_ = {
    data?: AppConfigurationResponse;
    error?: _Error;
    meta?: {
        [key: string]: unknown;
    };
};

export type StandardResponse_FeedbackRatingResponse_ = {
    data?: FeedbackRatingResponse;
    error?: _Error;
    meta?: {
        [key: string]: unknown;
    };
};

export type StandardResponse_ForceUpdateMoappResponse_ = {
    data?: ForceUpdateMoappResponse;
    error?: _Error;
    meta?: {
        [key: string]: unknown;
    };
};

export type StandardResponse_List_OrgAndRelateDataResponse__ = {
    data?: Array<OrgAndRelateDataResponse>;
    error?: _Error;
    meta?: {
        [key: string]: unknown;
    };
};

export type StandardResponse_List_OrgServiceCacheData__ = {
    data?: Array<OrgServiceCacheData>;
    error?: _Error;
    meta?: {
        [key: string]: unknown;
    };
};

export type StandardResponse_List_OrganizationInfo__ = {
    data?: Array<OrganizationInfo>;
    error?: _Error;
    meta?: {
        [key: string]: unknown;
    };
};

export type StandardResponse_LongOrgResponse_ = {
    data?: LongOrgResponse;
    error?: _Error;
    meta?: {
        [key: string]: unknown;
    };
};

export type StandardResponse_ManagerSession_ = {
    data?: ManagerSession;
    error?: _Error;
    meta?: {
        [key: string]: unknown;
    };
};

export type StandardResponse_Map_string_List_userData___ = {
    data?: {
        [key: string]: Array<UserData>;
    };
    error?: _Error;
    meta?: {
        [key: string]: unknown;
    };
};

export type StandardResponse_Map_ = {
    data?: {
        [key: string]: unknown;
    };
    error?: _Error;
    meta?: {
        [key: string]: unknown;
    };
};

export type StandardResponse_MoappFeedbackLogResponse_ = {
    data?: MoappFeedbackLogResponse;
    error?: _Error;
    meta?: {
        [key: string]: unknown;
    };
};

export type StandardResponse_MultiFeedbackAndRatingResponse_ = {
    data?: MultiFeedbackAndRatingResponse;
    error?: _Error;
    meta?: {
        [key: string]: unknown;
    };
};

export type StandardResponse_Oauth2ProfileResponse_ = {
    data?: Oauth2ProfileResponse;
    error?: _Error;
    meta?: {
        [key: string]: unknown;
    };
};

export type StandardResponse_Oauth2SignupResponse_ = {
    data?: Oauth2SignupResponse;
    error?: _Error;
    meta?: {
        [key: string]: unknown;
    };
};

export type StandardResponse_Oauth2TokenResponse_ = {
    data?: Oauth2TokenResponse;
    error?: _Error;
    meta?: {
        [key: string]: unknown;
    };
};

export type StandardResponse_QuickTipsConfigResponse_ = {
    data?: QuickTipsConfigResponse;
    error?: _Error;
    meta?: {
        [key: string]: unknown;
    };
};

export type StandardResponse_RatingConfigResponse_ = {
    data?: RatingConfigResponse;
    error?: _Error;
    meta?: {
        [key: string]: unknown;
    };
};

export type StandardResponse_SendInvitationResponse_ = {
    data?: SendInvitationResponse;
    error?: _Error;
    meta?: {
        [key: string]: unknown;
    };
};

export type StandardResponse_TimeZoneListResponse_ = {
    data?: TimeZoneListResponse;
    error?: _Error;
    meta?: {
        [key: string]: unknown;
    };
};

export type StandardResponse_userConfigurationBrowseResponse_ = {
    data?: UserConfigurationBrowseResponse;
    error?: _Error;
    meta?: {
        [key: string]: unknown;
    };
};

export type StandardResponse_userConfigurationResponse_ = {
    data?: UserConfigurationResponse;
    error?: _Error;
    meta?: {
        [key: string]: unknown;
    };
};

export type StandardResponse_userListResponse_ = {
    data?: UserListResponse;
    error?: _Error;
    meta?: {
        [key: string]: unknown;
    };
};

export type StandardResponse_userProfileResponse_ = {
    data?: UserProfileResponse;
    error?: _Error;
    meta?: {
        [key: string]: unknown;
    };
};

export type StandardResponse_userTrackingBrowseResponse_ = {
    data?: UserTrackingBrowseResponse;
    error?: _Error;
    meta?: {
        [key: string]: unknown;
    };
};

export type StandardResponse_userTrackingResponse_ = {
    data?: UserTrackingResponse;
    error?: _Error;
    meta?: {
        [key: string]: unknown;
    };
};

export type StandardResponse_userTrackingsResponse_ = {
    data?: UserTrackingsResponse;
    error?: _Error;
    meta?: {
        [key: string]: unknown;
    };
};

export type StandardResponse_boolean_ = {
    data?: boolean;
    error?: _Error;
    meta?: {
        [key: string]: unknown;
    };
};

export type StandardResponse_object_ = {
    data?: {
        [key: string]: unknown;
    };
    error?: _Error;
    meta?: {
        [key: string]: unknown;
    };
};

export type SuspendOrgRequest = {
    org_id?: string;
    suspend: boolean;
};

export type TimeZoneListResponse = {
    timezones?: Array<TimeZoneResponse>;
};

export type TimeZoneResponse = {
    format?: string;
    offset?: string;
    zone_id?: string;
};

export type Uri = {
    absolute?: boolean;
    authority?: string;
    fragment?: string;
    host?: string;
    opaque?: boolean;
    path?: string;
    port?: number;
    query?: string;
    rawAuthority?: string;
    rawFragment?: string;
    rawPath?: string;
    rawQuery?: string;
    rawSchemeSpecificPart?: string;
    rawUserInfo?: string;
    scheme?: string;
    schemeSpecificPart?: string;
    userInfo?: string;
};

export type Url = {
    authority?: string;
    content?: {
        [key: string]: unknown;
    };
    defaultPort?: number;
    file?: string;
    host?: string;
    path?: string;
    port?: number;
    protocol?: string;
    query?: string;
    ref?: string;
    userInfo?: string;
};

export type UrlStreamHandler = {
    [key: string]: unknown;
};

export type UpdateProfileRequest = {
    family_name?: string;
    given_name?: string;
    name?: string;
    nickname?: string;
    picture?: string;
    user_metadata?: {
        [key: string]: unknown;
    };
};

export type UpdateRatingConfigRequest = {
    do_not_ask_rating: boolean;
};

export type UpdateUserProfileRequest = {
    delete_org_role_list?: Array<OrgRoleRequest>;
    update_org_role_list?: Array<OrgRoleRequest>;
    user_id?: string;
};

export type UserConfig = {
    desc?: string;
    id?: string;
    name?: string;
    type?: string;
    value?: string;
};

export type UserConfigurationBrowseRequest = {
    filter: Filter;
};

export type UserConfigurationBrowseResponse = {
    configs?: Array<UserConfigurationResponse>;
};

export type UserConfigurationDeleteRequest = {
    id?: string;
};

export type UserConfigurationRequest = {
    desc?: string;
    name?: string;
    type?: string;
    value?: string;
};

export type UserConfigurationResponse = {
    created_date?: string;
    desc?: string;
    id?: string;
    name?: string;
    type?: string;
    value?: string;
};

export type UserData = {
    email?: string;
    id?: string;
    name?: string;
    picture?: string;
    status?: 'ACTIVE' | 'DEACTIVATED' | 'UNVERIFIED';
    zone_id?: string;
};

export type UserListResponse = {
    users?: Array<UserResponse>;
};

export type UserOrgData = {
    org_id?: string;
    org_key?: string;
    roles?: Array<string>;
};

export type UserProfileResponse = {
    allow_deactivate?: boolean;
    email?: string;
    force_update_moapp?: boolean;
    id?: string;
    last_login?: string;
    mobile_phone?: string;
    name?: string;
    org_role_list?: Array<OrgRoleResponse>;
    picture?: string;
    rating_config?: RatingConfigResponse;
    readonly?: boolean;
    roles?: Array<string>;
    status?: 'ACTIVE' | 'DEACTIVATED' | 'UNVERIFIED';
    zone_id?: string;
};

export type UserResponse = {
    app_metadata?: AppMetadata;
    blocked?: boolean;
    created_by?: string;
    created_date?: string;
    email?: string;
    email_verified?: boolean;
    family_name?: string;
    given_name?: string;
    id?: string;
    identities?: Array<Identity>;
    last_login?: string;
    mobile_phone?: string;
    mobile_phone_verified?: boolean;
    modified_date?: string;
    name?: string;
    office_phone?: string;
    picture?: string;
    picture_id?: string;
    status?: 'ACTIVE' | 'DEACTIVATED' | 'UNVERIFIED';
    updated_by?: string;
    user_metadata?: {
        [key: string]: unknown;
    };
    zone_id?: string;
};

export type UserTrackingBrowseRequest = {
    filter: Filter;
    paging?: PageInfo;
};

export type UserTrackingBrowseResponse = {
    items?: Array<UserTrackingResponse>;
    paging?: PageInfo;
};

export type UserTrackingRequest = {
    action?: string;
    component_name?: string;
    event_name?: string;
    from_screen?: string;
    imei?: string;
    status?: number;
    to_screen?: string;
};

export type UserTrackingResponse = {
    action?: string;
    app_version?: string;
    component_name?: string;
    created_date?: string;
    event_name?: string;
    from_screen?: string;
    id?: string;
    imei?: string;
    platform?: string;
    status?: number;
    time?: string;
    to_screen?: string;
    user_id?: string;
};

export type UserTrackingsRequest = {
    items?: Array<UserTrackingRequest>;
};

export type UserTrackingsResponse = {
    items?: Array<UserTrackingResponse>;
};

export type UsersByEmailsRequest = {
    emails?: Array<string>;
};

export type GetConfigUsingGetData = {
    body?: never;
    headers: {
        /**
         * Bearer AccessToken
         */
        Authorization?: string;
        /**
         * Application Identifier
         */
        'X-App-Id': string;
        /**
         * App Version
         */
        'X-App-Version': string;
        /**
         * Samsung,...
         */
        'X-Device-Family': string;
        /**
         * Unique Device/Web Identifier
         */
        'X-Device-Id': string;
        'X-Device-Locale': string;
        /**
         * android|ios|web
         */
        'X-Device-Os': string;
        'X-Device-Os-Version': string;
        /**
         * UserId Information
         */
        'X-User-Id'?: string;
    };
    path?: never;
    query?: {
        /**
         * names
         */
        names?: Array<string>;
        /**
         * raw
         */
        raw?: boolean;
        /**
         * types
         */
        types?: Array<string>;
    };
    url: '/api/v1/app-configuration/config';
};

export type GetConfigUsingGetErrors = {
    /**
     * Unauthorized
     */
    401: unknown;
    /**
     * Forbidden
     */
    403: unknown;
    /**
     * Not Found
     */
    404: unknown;
};

export type GetConfigUsingGetResponses = {
    /**
     * OK
     */
    200: StandardResponse_AppConfigurationBrowseResponse_;
};

export type GetConfigUsingGetResponse = GetConfigUsingGetResponses[keyof GetConfigUsingGetResponses];

export type PutConfigUsingPostData = {
    /**
     * request
     */
    body: AppConfigurationRequest;
    headers: {
        /**
         * Bearer AccessToken
         */
        Authorization?: string;
        /**
         * Application Identifier
         */
        'X-App-Id': string;
        /**
         * App Version
         */
        'X-App-Version': string;
        /**
         * Samsung,...
         */
        'X-Device-Family': string;
        /**
         * Unique Device/Web Identifier
         */
        'X-Device-Id': string;
        'X-Device-Locale': string;
        /**
         * android|ios|web
         */
        'X-Device-Os': string;
        'X-Device-Os-Version': string;
        /**
         * UserId Information
         */
        'X-User-Id'?: string;
    };
    path?: never;
    query?: never;
    url: '/api/v1/app-configuration/config';
};

export type PutConfigUsingPostErrors = {
    /**
     * Unauthorized
     */
    401: unknown;
    /**
     * Forbidden
     */
    403: unknown;
    /**
     * Not Found
     */
    404: unknown;
};

export type PutConfigUsingPostResponses = {
    /**
     * OK
     */
    200: StandardResponse_AppConfigurationResponse_;
    /**
     * Created
     */
    201: unknown;
};

export type PutConfigUsingPostResponse = PutConfigUsingPostResponses[keyof PutConfigUsingPostResponses];

export type GetConfigByTypeAndNameUsingGetData = {
    body?: never;
    headers: {
        /**
         * Bearer AccessToken
         */
        Authorization?: string;
        /**
         * Application Identifier
         */
        'X-App-Id': string;
        /**
         * App Version
         */
        'X-App-Version': string;
        /**
         * Samsung,...
         */
        'X-Device-Family': string;
        /**
         * Unique Device/Web Identifier
         */
        'X-Device-Id': string;
        'X-Device-Locale': string;
        /**
         * android|ios|web
         */
        'X-Device-Os': string;
        'X-Device-Os-Version': string;
        /**
         * UserId Information
         */
        'X-User-Id'?: string;
    };
    path: {
        /**
         * name
         */
        name: string;
        /**
         * type
         */
        type: string;
    };
    query?: {
        /**
         * raw
         */
        raw?: boolean;
    };
    url: '/api/v1/app-configuration/config/{type}/{name}';
};

export type GetConfigByTypeAndNameUsingGetErrors = {
    /**
     * Unauthorized
     */
    401: unknown;
    /**
     * Forbidden
     */
    403: unknown;
    /**
     * Not Found
     */
    404: unknown;
};

export type GetConfigByTypeAndNameUsingGetResponses = {
    /**
     * OK
     */
    200: StandardResponse_AppConfigurationResponse_;
};

export type GetConfigByTypeAndNameUsingGetResponse = GetConfigByTypeAndNameUsingGetResponses[keyof GetConfigByTypeAndNameUsingGetResponses];

export type UploadFeedbackLogUsingPostData = {
    body: {
        /**
         * comment
         */
        comment?: unknown;
        /**
         * file
         */
        file: Blob | File;
    };
    headers: {
        /**
         * Bearer AccessToken
         */
        Authorization?: string;
        /**
         * Application Identifier
         */
        'X-App-Id': string;
        /**
         * App Version
         */
        'X-App-Version': string;
        /**
         * Samsung,...
         */
        'X-Device-Family': string;
        /**
         * Unique Device/Web Identifier
         */
        'X-Device-Id': string;
        'X-Device-Locale': string;
        /**
         * android|ios|web
         */
        'X-Device-Os': string;
        'X-Device-Os-Version': string;
        /**
         * UserId Information
         */
        'X-User-Id'?: string;
    };
    path?: never;
    query?: never;
    url: '/api/v1/moapp/feedback-log';
};

export type UploadFeedbackLogUsingPostErrors = {
    /**
     * Unauthorized
     */
    401: unknown;
    /**
     * Forbidden
     */
    403: unknown;
    /**
     * Not Found
     */
    404: unknown;
};

export type UploadFeedbackLogUsingPostResponses = {
    /**
     * OK
     */
    200: StandardResponse_MoappFeedbackLogResponse_;
    /**
     * Created
     */
    201: unknown;
};

export type UploadFeedbackLogUsingPostResponse = UploadFeedbackLogUsingPostResponses[keyof UploadFeedbackLogUsingPostResponses];

export type AuthorizeUsingGetData = {
    body?: never;
    headers: {
        /**
         * Bearer AccessToken
         */
        Authorization?: string;
        /**
         * Application Identifier
         */
        'X-App-Id': string;
        /**
         * App Version
         */
        'X-App-Version': string;
        /**
         * Samsung,...
         */
        'X-Device-Family': string;
        /**
         * Unique Device/Web Identifier
         */
        'X-Device-Id': string;
        'X-Device-Locale': string;
        /**
         * android|ios|web
         */
        'X-Device-Os': string;
        'X-Device-Os-Version': string;
        /**
         * UserId Information
         */
        'X-User-Id'?: string;
    };
    path?: never;
    query: {
        /**
         * parameters
         */
        parameters: unknown;
    };
    url: '/api/v1/oauth/authorize';
};

export type AuthorizeUsingGetErrors = {
    /**
     * Unauthorized
     */
    401: unknown;
    /**
     * Forbidden
     */
    403: unknown;
    /**
     * Not Found
     */
    404: unknown;
};

export type AuthorizeUsingGetResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type LogoutUsingPostData = {
    /**
     * logoutRequest
     */
    body: LogoutRequest;
    headers: {
        /**
         * Bearer AccessToken
         */
        Authorization?: string;
        /**
         * Application Identifier
         */
        'X-App-Id': string;
        /**
         * App Version
         */
        'X-App-Version': string;
        /**
         * Samsung,...
         */
        'X-Device-Family': string;
        /**
         * Unique Device/Web Identifier
         */
        'X-Device-Id': string;
        'X-Device-Locale': string;
        /**
         * android|ios|web
         */
        'X-Device-Os': string;
        'X-Device-Os-Version': string;
        /**
         * UserId Information
         */
        'X-User-Id'?: string;
    };
    path?: never;
    query?: never;
    url: '/api/v1/oauth/logout';
};

export type LogoutUsingPostErrors = {
    /**
     * Unauthorized
     */
    401: unknown;
    /**
     * Forbidden
     */
    403: unknown;
    /**
     * Not Found
     */
    404: unknown;
};

export type LogoutUsingPostResponses = {
    /**
     * OK
     */
    200: StandardResponse_Map_;
    /**
     * Created
     */
    201: unknown;
};

export type LogoutUsingPostResponse = LogoutUsingPostResponses[keyof LogoutUsingPostResponses];

export type SignupUsingPostData = {
    /**
     * signupRequest
     */
    body: SignupRequest;
    headers: {
        /**
         * Bearer AccessToken
         */
        Authorization?: string;
        /**
         * Application Identifier
         */
        'X-App-Id': string;
        /**
         * App Version
         */
        'X-App-Version': string;
        /**
         * Samsung,...
         */
        'X-Device-Family': string;
        /**
         * Unique Device/Web Identifier
         */
        'X-Device-Id': string;
        'X-Device-Locale': string;
        /**
         * android|ios|web
         */
        'X-Device-Os': string;
        'X-Device-Os-Version': string;
        /**
         * UserId Information
         */
        'X-User-Id'?: string;
    };
    path?: never;
    query?: never;
    url: '/api/v1/oauth/signup';
};

export type SignupUsingPostErrors = {
    /**
     * Unauthorized
     */
    401: unknown;
    /**
     * Forbidden
     */
    403: unknown;
    /**
     * Not Found
     */
    404: unknown;
};

export type SignupUsingPostResponses = {
    /**
     * OK
     */
    200: StandardResponse_Oauth2SignupResponse_;
    /**
     * Created
     */
    201: unknown;
};

export type SignupUsingPostResponse = SignupUsingPostResponses[keyof SignupUsingPostResponses];

export type TokenEndpointUsingPostData = {
    body: {
        /**
         * parameters
         */
        parameters: unknown;
    };
    headers: {
        /**
         * Bearer AccessToken
         */
        Authorization?: string;
        /**
         * Application Identifier
         */
        'X-App-Id': string;
        /**
         * App Version
         */
        'X-App-Version': string;
        /**
         * Samsung,...
         */
        'X-Device-Family': string;
        /**
         * Unique Device/Web Identifier
         */
        'X-Device-Id': string;
        'X-Device-Locale': string;
        /**
         * android|ios|web
         */
        'X-Device-Os': string;
        'X-Device-Os-Version': string;
        /**
         * UserId Information
         */
        'X-User-Id'?: string;
    };
    path?: never;
    query?: never;
    url: '/api/v1/oauth/token';
};

export type TokenEndpointUsingPostErrors = {
    /**
     * Unauthorized
     */
    401: unknown;
    /**
     * Forbidden
     */
    403: unknown;
    /**
     * Not Found
     */
    404: unknown;
};

export type TokenEndpointUsingPostResponses = {
    /**
     * OK
     */
    200: StandardResponse_Oauth2TokenResponse_;
    /**
     * Created
     */
    201: unknown;
};

export type TokenEndpointUsingPostResponse = TokenEndpointUsingPostResponses[keyof TokenEndpointUsingPostResponses];

export type ChangePasswordUsingPatchData = {
    /**
     * changePasswordRequest
     */
    body: ChangePasswordRequest;
    headers: {
        /**
         * Bearer AccessToken
         */
        Authorization?: string;
        /**
         * Application Identifier
         */
        'X-App-Id': string;
        /**
         * App Version
         */
        'X-App-Version': string;
        /**
         * Samsung,...
         */
        'X-Device-Family': string;
        /**
         * Unique Device/Web Identifier
         */
        'X-Device-Id': string;
        'X-Device-Locale': string;
        /**
         * android|ios|web
         */
        'X-Device-Os': string;
        'X-Device-Os-Version': string;
        /**
         * UserId Information
         */
        'X-User-Id'?: string;
    };
    path?: never;
    query?: never;
    url: '/api/v1/profile/change_password';
};

export type ChangePasswordUsingPatchErrors = {
    /**
     * Unauthorized
     */
    401: unknown;
    /**
     * Forbidden
     */
    403: unknown;
};

export type ChangePasswordUsingPatchResponses = {
    /**
     * OK
     */
    200: StandardResponse_Map_;
    /**
     * No Content
     */
    204: unknown;
};

export type ChangePasswordUsingPatchResponse = ChangePasswordUsingPatchResponses[keyof ChangePasswordUsingPatchResponses];

export type GetProfileMeUsingGetData = {
    body?: never;
    headers: {
        /**
         * Bearer AccessToken
         */
        Authorization?: string;
        /**
         * Application Identifier
         */
        'X-App-Id': string;
        /**
         * App Version
         */
        'X-App-Version': string;
        /**
         * Samsung,...
         */
        'X-Device-Family': string;
        /**
         * Unique Device/Web Identifier
         */
        'X-Device-Id': string;
        'X-Device-Locale': string;
        /**
         * android|ios|web
         */
        'X-Device-Os': string;
        'X-Device-Os-Version': string;
        /**
         * UserId Information
         */
        'X-User-Id'?: string;
    };
    path?: never;
    query?: never;
    url: '/api/v1/profile/me';
};

export type GetProfileMeUsingGetErrors = {
    /**
     * Unauthorized
     */
    401: unknown;
    /**
     * Forbidden
     */
    403: unknown;
    /**
     * Not Found
     */
    404: unknown;
};

export type GetProfileMeUsingGetResponses = {
    /**
     * OK
     */
    200: StandardResponse_Oauth2ProfileResponse_;
};

export type GetProfileMeUsingGetResponse = GetProfileMeUsingGetResponses[keyof GetProfileMeUsingGetResponses];

export type UpdateProfileUsingPatchData = {
    /**
     * updateProfileRequest
     */
    body: UpdateProfileRequest;
    headers: {
        /**
         * Bearer AccessToken
         */
        Authorization?: string;
        /**
         * Application Identifier
         */
        'X-App-Id': string;
        /**
         * App Version
         */
        'X-App-Version': string;
        /**
         * Samsung,...
         */
        'X-Device-Family': string;
        /**
         * Unique Device/Web Identifier
         */
        'X-Device-Id': string;
        'X-Device-Locale': string;
        /**
         * android|ios|web
         */
        'X-Device-Os': string;
        'X-Device-Os-Version': string;
        /**
         * UserId Information
         */
        'X-User-Id'?: string;
    };
    path?: never;
    query?: never;
    url: '/api/v1/profile/me';
};

export type UpdateProfileUsingPatchErrors = {
    /**
     * Unauthorized
     */
    401: unknown;
    /**
     * Forbidden
     */
    403: unknown;
};

export type UpdateProfileUsingPatchResponses = {
    /**
     * OK
     */
    200: StandardResponse_Map_;
    /**
     * No Content
     */
    204: unknown;
};

export type UpdateProfileUsingPatchResponse = UpdateProfileUsingPatchResponses[keyof UpdateProfileUsingPatchResponses];

export type ResetPasswordUsingPostData = {
    /**
     * resetPasswordFinishRequest
     */
    body: ResetPasswordFinishRequest;
    headers: {
        /**
         * Bearer AccessToken
         */
        Authorization?: string;
        /**
         * Application Identifier
         */
        'X-App-Id': string;
        /**
         * App Version
         */
        'X-App-Version': string;
        /**
         * Samsung,...
         */
        'X-Device-Family': string;
        /**
         * Unique Device/Web Identifier
         */
        'X-Device-Id': string;
        'X-Device-Locale': string;
        /**
         * android|ios|web
         */
        'X-Device-Os': string;
        'X-Device-Os-Version': string;
        /**
         * UserId Information
         */
        'X-User-Id'?: string;
    };
    path?: never;
    query?: never;
    url: '/api/v1/profile/reset_password/finish';
};

export type ResetPasswordUsingPostErrors = {
    /**
     * Unauthorized
     */
    401: unknown;
    /**
     * Forbidden
     */
    403: unknown;
    /**
     * Not Found
     */
    404: unknown;
};

export type ResetPasswordUsingPostResponses = {
    /**
     * OK
     */
    200: StandardResponse_Map_;
    /**
     * Created
     */
    201: unknown;
};

export type ResetPasswordUsingPostResponse = ResetPasswordUsingPostResponses[keyof ResetPasswordUsingPostResponses];

export type ResetPasswordInitUsingPost1Data = {
    /**
     * resetPasswordInitRequest
     */
    body: ResetPasswordInitRequest;
    headers: {
        /**
         * Bearer AccessToken
         */
        Authorization?: string;
        /**
         * Application Identifier
         */
        'X-App-Id': string;
        /**
         * App Version
         */
        'X-App-Version': string;
        /**
         * Samsung,...
         */
        'X-Device-Family': string;
        /**
         * Unique Device/Web Identifier
         */
        'X-Device-Id': string;
        'X-Device-Locale': string;
        /**
         * android|ios|web
         */
        'X-Device-Os': string;
        'X-Device-Os-Version': string;
        /**
         * UserId Information
         */
        'X-User-Id'?: string;
    };
    path?: never;
    query?: never;
    url: '/api/v1/profile/reset_password/init';
};

export type ResetPasswordInitUsingPost1Errors = {
    /**
     * Unauthorized
     */
    401: unknown;
    /**
     * Forbidden
     */
    403: unknown;
    /**
     * Not Found
     */
    404: unknown;
};

export type ResetPasswordInitUsingPost1Responses = {
    /**
     * OK
     */
    200: StandardResponse_Map_;
    /**
     * Created
     */
    201: unknown;
};

export type ResetPasswordInitUsingPost1Response = ResetPasswordInitUsingPost1Responses[keyof ResetPasswordInitUsingPost1Responses];

export type ResendVerificationEmailUsingPatch1Data = {
    /**
     * verificationEmailRequest
     */
    body: ResendVerificationEmailRequest;
    headers: {
        /**
         * Bearer AccessToken
         */
        Authorization?: string;
        /**
         * Application Identifier
         */
        'X-App-Id': string;
        /**
         * App Version
         */
        'X-App-Version': string;
        /**
         * Samsung,...
         */
        'X-Device-Family': string;
        /**
         * Unique Device/Web Identifier
         */
        'X-Device-Id': string;
        'X-Device-Locale': string;
        /**
         * android|ios|web
         */
        'X-Device-Os': string;
        'X-Device-Os-Version': string;
        /**
         * UserId Information
         */
        'X-User-Id'?: string;
    };
    path?: never;
    query?: never;
    url: '/api/v1/profile/verification_email';
};

export type ResendVerificationEmailUsingPatch1Errors = {
    /**
     * Unauthorized
     */
    401: unknown;
    /**
     * Forbidden
     */
    403: unknown;
};

export type ResendVerificationEmailUsingPatch1Responses = {
    /**
     * OK
     */
    200: StandardResponse_Map_;
    /**
     * No Content
     */
    204: unknown;
};

export type ResendVerificationEmailUsingPatch1Response = ResendVerificationEmailUsingPatch1Responses[keyof ResendVerificationEmailUsingPatch1Responses];

export type SendVerificationEmailUsingPostData = {
    /**
     * verificationEmailRequest
     */
    body: SendVerificationEmailRequest;
    headers: {
        /**
         * Bearer AccessToken
         */
        Authorization?: string;
        /**
         * Application Identifier
         */
        'X-App-Id': string;
        /**
         * App Version
         */
        'X-App-Version': string;
        /**
         * Samsung,...
         */
        'X-Device-Family': string;
        /**
         * Unique Device/Web Identifier
         */
        'X-Device-Id': string;
        'X-Device-Locale': string;
        /**
         * android|ios|web
         */
        'X-Device-Os': string;
        'X-Device-Os-Version': string;
        /**
         * UserId Information
         */
        'X-User-Id'?: string;
    };
    path?: never;
    query?: never;
    url: '/api/v1/profile/verification_email/new';
};

export type SendVerificationEmailUsingPostErrors = {
    /**
     * Unauthorized
     */
    401: unknown;
    /**
     * Forbidden
     */
    403: unknown;
    /**
     * Not Found
     */
    404: unknown;
};

export type SendVerificationEmailUsingPostResponses = {
    /**
     * OK
     */
    200: StandardResponse_Map_;
    /**
     * Created
     */
    201: unknown;
};

export type SendVerificationEmailUsingPostResponse = SendVerificationEmailUsingPostResponses[keyof SendVerificationEmailUsingPostResponses];

export type GetConfigUsingGet1Data = {
    body?: never;
    headers: {
        /**
         * Bearer AccessToken
         */
        Authorization?: string;
        /**
         * Application Identifier
         */
        'X-App-Id': string;
        /**
         * App Version
         */
        'X-App-Version': string;
        /**
         * Samsung,...
         */
        'X-Device-Family': string;
        /**
         * Unique Device/Web Identifier
         */
        'X-Device-Id': string;
        'X-Device-Locale': string;
        /**
         * android|ios|web
         */
        'X-Device-Os': string;
        'X-Device-Os-Version': string;
        /**
         * UserId Information
         */
        'X-User-Id'?: string;
    };
    path?: never;
    query?: never;
    url: '/api/v1/quick-tips-config/get';
};

export type GetConfigUsingGet1Errors = {
    /**
     * Unauthorized
     */
    401: unknown;
    /**
     * Forbidden
     */
    403: unknown;
    /**
     * Not Found
     */
    404: unknown;
};

export type GetConfigUsingGet1Responses = {
    /**
     * OK
     */
    200: StandardResponse_QuickTipsConfigResponse_;
};

export type GetConfigUsingGet1Response = GetConfigUsingGet1Responses[keyof GetConfigUsingGet1Responses];

export type PutConfigUsingPost1Data = {
    /**
     * request
     */
    body: QuickTipsConfigRequest;
    headers: {
        /**
         * Bearer AccessToken
         */
        Authorization?: string;
        /**
         * Application Identifier
         */
        'X-App-Id': string;
        /**
         * App Version
         */
        'X-App-Version': string;
        /**
         * Samsung,...
         */
        'X-Device-Family': string;
        /**
         * Unique Device/Web Identifier
         */
        'X-Device-Id': string;
        'X-Device-Locale': string;
        /**
         * android|ios|web
         */
        'X-Device-Os': string;
        'X-Device-Os-Version': string;
        /**
         * UserId Information
         */
        'X-User-Id'?: string;
    };
    path?: never;
    query?: never;
    url: '/api/v1/quick-tips-config/put';
};

export type PutConfigUsingPost1Errors = {
    /**
     * Unauthorized
     */
    401: unknown;
    /**
     * Forbidden
     */
    403: unknown;
    /**
     * Not Found
     */
    404: unknown;
};

export type PutConfigUsingPost1Responses = {
    /**
     * OK
     */
    200: StandardResponse_QuickTipsConfigResponse_;
    /**
     * Created
     */
    201: unknown;
};

export type PutConfigUsingPost1Response = PutConfigUsingPost1Responses[keyof PutConfigUsingPost1Responses];

export type ListTimezonesUsingGetData = {
    body?: never;
    headers: {
        /**
         * Bearer AccessToken
         */
        Authorization?: string;
        /**
         * Application Identifier
         */
        'X-App-Id': string;
        /**
         * App Version
         */
        'X-App-Version': string;
        /**
         * Samsung,...
         */
        'X-Device-Family': string;
        /**
         * Unique Device/Web Identifier
         */
        'X-Device-Id': string;
        'X-Device-Locale': string;
        /**
         * android|ios|web
         */
        'X-Device-Os': string;
        'X-Device-Os-Version': string;
        /**
         * UserId Information
         */
        'X-User-Id'?: string;
    };
    path?: never;
    query?: never;
    url: '/api/v1/timezone/list';
};

export type ListTimezonesUsingGetErrors = {
    /**
     * Unauthorized
     */
    401: unknown;
    /**
     * Forbidden
     */
    403: unknown;
    /**
     * Not Found
     */
    404: unknown;
};

export type ListTimezonesUsingGetResponses = {
    /**
     * OK
     */
    200: StandardResponse_TimeZoneListResponse_;
};

export type ListTimezonesUsingGetResponse = ListTimezonesUsingGetResponses[keyof ListTimezonesUsingGetResponses];

export type PutConfigUsingPost2Data = {
    /**
     * request
     */
    body: UserConfigurationRequest;
    headers: {
        /**
         * Bearer AccessToken
         */
        Authorization?: string;
        /**
         * Application Identifier
         */
        'X-App-Id': string;
        /**
         * App Version
         */
        'X-App-Version': string;
        /**
         * Samsung,...
         */
        'X-Device-Family': string;
        /**
         * Unique Device/Web Identifier
         */
        'X-Device-Id': string;
        'X-Device-Locale': string;
        /**
         * android|ios|web
         */
        'X-Device-Os': string;
        'X-Device-Os-Version': string;
        /**
         * UserId Information
         */
        'X-User-Id'?: string;
    };
    path?: never;
    query?: never;
    url: '/api/v1/user-configuration/config';
};

export type PutConfigUsingPost2Errors = {
    /**
     * Unauthorized
     */
    401: unknown;
    /**
     * Forbidden
     */
    403: unknown;
    /**
     * Not Found
     */
    404: unknown;
};

export type PutConfigUsingPost2Responses = {
    /**
     * OK
     */
    200: StandardResponse_userConfigurationResponse_;
    /**
     * Created
     */
    201: unknown;
};

export type PutConfigUsingPost2Response = PutConfigUsingPost2Responses[keyof PutConfigUsingPost2Responses];

export type DeleteUserConfigurationUsingDeleteData = {
    body?: never;
    headers: {
        /**
         * Bearer AccessToken
         */
        Authorization?: string;
        /**
         * Application Identifier
         */
        'X-App-Id': string;
        /**
         * App Version
         */
        'X-App-Version': string;
        /**
         * Samsung,...
         */
        'X-Device-Family': string;
        /**
         * Unique Device/Web Identifier
         */
        'X-Device-Id': string;
        'X-Device-Locale': string;
        /**
         * android|ios|web
         */
        'X-Device-Os': string;
        'X-Device-Os-Version': string;
        /**
         * UserId Information
         */
        'X-User-Id'?: string;
    };
    path?: never;
    query?: never;
    url: '/api/v1/user-configuration/delete';
};

export type DeleteUserConfigurationUsingDeleteErrors = {
    /**
     * Unauthorized
     */
    401: unknown;
    /**
     * Forbidden
     */
    403: unknown;
};

export type DeleteUserConfigurationUsingDeleteResponses = {
    /**
     * OK
     */
    200: StandardResponse_object_;
    /**
     * No Content
     */
    204: unknown;
};

export type DeleteUserConfigurationUsingDeleteResponse = DeleteUserConfigurationUsingDeleteResponses[keyof DeleteUserConfigurationUsingDeleteResponses];

export type GetConfigByIdUsingGetData = {
    body?: never;
    headers: {
        /**
         * Bearer AccessToken
         */
        Authorization?: string;
        /**
         * Application Identifier
         */
        'X-App-Id': string;
        /**
         * App Version
         */
        'X-App-Version': string;
        /**
         * Samsung,...
         */
        'X-Device-Family': string;
        /**
         * Unique Device/Web Identifier
         */
        'X-Device-Id': string;
        'X-Device-Locale': string;
        /**
         * android|ios|web
         */
        'X-Device-Os': string;
        'X-Device-Os-Version': string;
        /**
         * UserId Information
         */
        'X-User-Id'?: string;
    };
    path: {
        /**
         * id
         */
        id: string;
    };
    query?: never;
    url: '/api/v1/user-configuration/detail/{id}';
};

export type GetConfigByIdUsingGetErrors = {
    /**
     * Unauthorized
     */
    401: unknown;
    /**
     * Forbidden
     */
    403: unknown;
    /**
     * Not Found
     */
    404: unknown;
};

export type GetConfigByIdUsingGetResponses = {
    /**
     * OK
     */
    200: StandardResponse_userConfigurationResponse_;
};

export type GetConfigByIdUsingGetResponse = GetConfigByIdUsingGetResponses[keyof GetConfigByIdUsingGetResponses];

export type SearchConfigsUsingPostData = {
    /**
     * request
     */
    body: UserConfigurationBrowseRequest;
    headers: {
        /**
         * Bearer AccessToken
         */
        Authorization?: string;
        /**
         * Application Identifier
         */
        'X-App-Id': string;
        /**
         * App Version
         */
        'X-App-Version': string;
        /**
         * Samsung,...
         */
        'X-Device-Family': string;
        /**
         * Unique Device/Web Identifier
         */
        'X-Device-Id': string;
        'X-Device-Locale': string;
        /**
         * android|ios|web
         */
        'X-Device-Os': string;
        'X-Device-Os-Version': string;
        /**
         * UserId Information
         */
        'X-User-Id'?: string;
    };
    path?: never;
    query?: never;
    url: '/api/v1/user-configuration/search';
};

export type SearchConfigsUsingPostErrors = {
    /**
     * Unauthorized
     */
    401: unknown;
    /**
     * Forbidden
     */
    403: unknown;
    /**
     * Not Found
     */
    404: unknown;
};

export type SearchConfigsUsingPostResponses = {
    /**
     * OK
     */
    200: StandardResponse_userConfigurationBrowseResponse_;
    /**
     * Created
     */
    201: unknown;
};

export type SearchConfigsUsingPostResponse = SearchConfigsUsingPostResponses[keyof SearchConfigsUsingPostResponses];

export type FeedbackAndRatingUsingPostData = {
    /**
     * feedbackRatingRequest
     */
    body: FeedbackRatingRequest;
    headers: {
        /**
         * Bearer AccessToken
         */
        Authorization?: string;
        /**
         * Application Identifier
         */
        'X-App-Id': string;
        /**
         * App Version
         */
        'X-App-Version': string;
        /**
         * Samsung,...
         */
        'X-Device-Family': string;
        /**
         * Unique Device/Web Identifier
         */
        'X-Device-Id': string;
        'X-Device-Locale': string;
        /**
         * android|ios|web
         */
        'X-Device-Os': string;
        'X-Device-Os-Version': string;
        /**
         * UserId Information
         */
        'X-User-Id'?: string;
    };
    path?: never;
    query?: never;
    url: '/api/v1/user-review/feedback-and-rating';
};

export type FeedbackAndRatingUsingPostErrors = {
    /**
     * Unauthorized
     */
    401: unknown;
    /**
     * Forbidden
     */
    403: unknown;
    /**
     * Not Found
     */
    404: unknown;
};

export type FeedbackAndRatingUsingPostResponses = {
    /**
     * OK
     */
    200: StandardResponse_FeedbackRatingResponse_;
    /**
     * Created
     */
    201: unknown;
};

export type FeedbackAndRatingUsingPostResponse = FeedbackAndRatingUsingPostResponses[keyof FeedbackAndRatingUsingPostResponses];

export type MultiFeedbackAndRatingUsingPostData = {
    /**
     * feedbackRatingListRequest
     */
    body: MultiFeedbackAndRatingRequest;
    headers: {
        /**
         * Bearer AccessToken
         */
        Authorization?: string;
        /**
         * Application Identifier
         */
        'X-App-Id': string;
        /**
         * App Version
         */
        'X-App-Version': string;
        /**
         * Samsung,...
         */
        'X-Device-Family': string;
        /**
         * Unique Device/Web Identifier
         */
        'X-Device-Id': string;
        'X-Device-Locale': string;
        /**
         * android|ios|web
         */
        'X-Device-Os': string;
        'X-Device-Os-Version': string;
        /**
         * UserId Information
         */
        'X-User-Id'?: string;
    };
    path?: never;
    query?: never;
    url: '/api/v1/user-review/multi-feedback-and-rating';
};

export type MultiFeedbackAndRatingUsingPostErrors = {
    /**
     * Unauthorized
     */
    401: unknown;
    /**
     * Forbidden
     */
    403: unknown;
    /**
     * Not Found
     */
    404: unknown;
};

export type MultiFeedbackAndRatingUsingPostResponses = {
    /**
     * OK
     */
    200: StandardResponse_MultiFeedbackAndRatingResponse_;
    /**
     * Created
     */
    201: unknown;
};

export type MultiFeedbackAndRatingUsingPostResponse = MultiFeedbackAndRatingUsingPostResponses[keyof MultiFeedbackAndRatingUsingPostResponses];

export type GetRatingConfigUsingGetData = {
    body?: never;
    headers: {
        /**
         * Bearer AccessToken
         */
        Authorization?: string;
        /**
         * Application Identifier
         */
        'X-App-Id': string;
        /**
         * App Version
         */
        'X-App-Version': string;
        /**
         * Samsung,...
         */
        'X-Device-Family': string;
        /**
         * Unique Device/Web Identifier
         */
        'X-Device-Id': string;
        'X-Device-Locale': string;
        /**
         * android|ios|web
         */
        'X-Device-Os': string;
        'X-Device-Os-Version': string;
        /**
         * UserId Information
         */
        'X-User-Id'?: string;
    };
    path?: never;
    query?: never;
    url: '/api/v1/user-review/rating-config';
};

export type GetRatingConfigUsingGetErrors = {
    /**
     * Unauthorized
     */
    401: unknown;
    /**
     * Forbidden
     */
    403: unknown;
    /**
     * Not Found
     */
    404: unknown;
};

export type GetRatingConfigUsingGetResponses = {
    /**
     * OK
     */
    200: StandardResponse_RatingConfigResponse_;
};

export type GetRatingConfigUsingGetResponse = GetRatingConfigUsingGetResponses[keyof GetRatingConfigUsingGetResponses];

export type UpdateRatingConfigUsingPostData = {
    /**
     * request
     */
    body: UpdateRatingConfigRequest;
    headers: {
        /**
         * Bearer AccessToken
         */
        Authorization?: string;
        /**
         * Application Identifier
         */
        'X-App-Id': string;
        /**
         * App Version
         */
        'X-App-Version': string;
        /**
         * Samsung,...
         */
        'X-Device-Family': string;
        /**
         * Unique Device/Web Identifier
         */
        'X-Device-Id': string;
        'X-Device-Locale': string;
        /**
         * android|ios|web
         */
        'X-Device-Os': string;
        'X-Device-Os-Version': string;
        /**
         * UserId Information
         */
        'X-User-Id'?: string;
    };
    path?: never;
    query?: never;
    url: '/api/v1/user-review/update-rating-config';
};

export type UpdateRatingConfigUsingPostErrors = {
    /**
     * Unauthorized
     */
    401: unknown;
    /**
     * Forbidden
     */
    403: unknown;
    /**
     * Not Found
     */
    404: unknown;
};

export type UpdateRatingConfigUsingPostResponses = {
    /**
     * OK
     */
    200: StandardResponse_RatingConfigResponse_;
    /**
     * Created
     */
    201: unknown;
};

export type UpdateRatingConfigUsingPostResponse = UpdateRatingConfigUsingPostResponses[keyof UpdateRatingConfigUsingPostResponses];

export type ConfigForceUpdateMoappUsingPostData = {
    /**
     * request
     */
    body: ForceUpdateMoappRequest;
    headers: {
        /**
         * Bearer AccessToken
         */
        Authorization?: string;
        /**
         * Application Identifier
         */
        'X-App-Id': string;
        /**
         * App Version
         */
        'X-App-Version': string;
        /**
         * Samsung,...
         */
        'X-Device-Family': string;
        /**
         * Unique Device/Web Identifier
         */
        'X-Device-Id': string;
        'X-Device-Locale': string;
        /**
         * android|ios|web
         */
        'X-Device-Os': string;
        'X-Device-Os-Version': string;
        /**
         * UserId Information
         */
        'X-User-Id'?: string;
    };
    path?: never;
    query?: never;
    url: '/api/v1/user/config-force-update-moapp';
};

export type ConfigForceUpdateMoappUsingPostErrors = {
    /**
     * Unauthorized
     */
    401: unknown;
    /**
     * Forbidden
     */
    403: unknown;
    /**
     * Not Found
     */
    404: unknown;
};

export type ConfigForceUpdateMoappUsingPostResponses = {
    /**
     * OK
     */
    200: StandardResponse_ForceUpdateMoappResponse_;
    /**
     * Created
     */
    201: unknown;
};

export type ConfigForceUpdateMoappUsingPostResponse = ConfigForceUpdateMoappUsingPostResponses[keyof ConfigForceUpdateMoappUsingPostResponses];

export type GetForceUpdateMoappUsingGetData = {
    body?: never;
    headers: {
        /**
         * Bearer AccessToken
         */
        Authorization?: string;
        /**
         * Application Identifier
         */
        'X-App-Id': string;
        /**
         * App Version
         */
        'X-App-Version': string;
        /**
         * Samsung,...
         */
        'X-Device-Family': string;
        /**
         * Unique Device/Web Identifier
         */
        'X-Device-Id': string;
        'X-Device-Locale': string;
        /**
         * android|ios|web
         */
        'X-Device-Os': string;
        'X-Device-Os-Version': string;
        /**
         * UserId Information
         */
        'X-User-Id'?: string;
    };
    path?: never;
    query?: never;
    url: '/api/v1/user/force-update-moapp';
};

export type GetForceUpdateMoappUsingGetErrors = {
    /**
     * Unauthorized
     */
    401: unknown;
    /**
     * Forbidden
     */
    403: unknown;
    /**
     * Not Found
     */
    404: unknown;
};

export type GetForceUpdateMoappUsingGetResponses = {
    /**
     * OK
     */
    200: StandardResponse_ForceUpdateMoappResponse_;
};

export type GetForceUpdateMoappUsingGetResponse = GetForceUpdateMoappUsingGetResponses[keyof GetForceUpdateMoappUsingGetResponses];

export type BrowseUserTrackingUsingPostData = {
    /**
     * request
     */
    body: UserTrackingBrowseRequest;
    headers: {
        /**
         * Bearer AccessToken
         */
        Authorization?: string;
        /**
         * Application Identifier
         */
        'X-App-Id': string;
        /**
         * App Version
         */
        'X-App-Version': string;
        /**
         * Samsung,...
         */
        'X-Device-Family': string;
        /**
         * Unique Device/Web Identifier
         */
        'X-Device-Id': string;
        'X-Device-Locale': string;
        /**
         * android|ios|web
         */
        'X-Device-Os': string;
        'X-Device-Os-Version': string;
        /**
         * UserId Information
         */
        'X-User-Id'?: string;
    };
    path?: never;
    query?: never;
    url: '/api/v1/user_tracking/browse';
};

export type BrowseUserTrackingUsingPostErrors = {
    /**
     * Unauthorized
     */
    401: unknown;
    /**
     * Forbidden
     */
    403: unknown;
    /**
     * Not Found
     */
    404: unknown;
};

export type BrowseUserTrackingUsingPostResponses = {
    /**
     * OK
     */
    200: StandardResponse_userTrackingBrowseResponse_;
    /**
     * Created
     */
    201: unknown;
};

export type BrowseUserTrackingUsingPostResponse = BrowseUserTrackingUsingPostResponses[keyof BrowseUserTrackingUsingPostResponses];

export type WriteUserTrackingUsingPostData = {
    /**
     * userTrackingRequest
     */
    body: UserTrackingRequest;
    headers: {
        /**
         * Bearer AccessToken
         */
        Authorization?: string;
        /**
         * Application Identifier
         */
        'X-App-Id': string;
        /**
         * App Version
         */
        'X-App-Version': string;
        /**
         * Samsung,...
         */
        'X-Device-Family': string;
        /**
         * Unique Device/Web Identifier
         */
        'X-Device-Id': string;
        'X-Device-Locale': string;
        /**
         * android|ios|web
         */
        'X-Device-Os': string;
        'X-Device-Os-Version': string;
        /**
         * UserId Information
         */
        'X-User-Id'?: string;
    };
    path?: never;
    query?: never;
    url: '/api/v1/user_tracking/write';
};

export type WriteUserTrackingUsingPostErrors = {
    /**
     * Unauthorized
     */
    401: unknown;
    /**
     * Forbidden
     */
    403: unknown;
    /**
     * Not Found
     */
    404: unknown;
};

export type WriteUserTrackingUsingPostResponses = {
    /**
     * OK
     */
    200: StandardResponse_userTrackingResponse_;
    /**
     * Created
     */
    201: unknown;
};

export type WriteUserTrackingUsingPostResponse = WriteUserTrackingUsingPostResponses[keyof WriteUserTrackingUsingPostResponses];

export type SignupUsingPost1Data = {
    /**
     * signupRequest
     */
    body: SignupRequest;
    headers: {
        /**
         * Bearer AccessToken
         */
        Authorization?: string;
        /**
         * Application Identifier
         */
        'X-App-Id': string;
        /**
         * App Version
         */
        'X-App-Version': string;
        /**
         * Samsung,...
         */
        'X-Device-Family': string;
        /**
         * Unique Device/Web Identifier
         */
        'X-Device-Id': string;
        'X-Device-Locale': string;
        /**
         * android|ios|web
         */
        'X-Device-Os': string;
        'X-Device-Os-Version': string;
        /**
         * UserId Information
         */
        'X-User-Id'?: string;
    };
    path?: never;
    query?: never;
    url: '/api/v2/oauth/signup';
};

export type SignupUsingPost1Errors = {
    /**
     * Unauthorized
     */
    401: unknown;
    /**
     * Forbidden
     */
    403: unknown;
    /**
     * Not Found
     */
    404: unknown;
};

export type SignupUsingPost1Responses = {
    /**
     * OK
     */
    200: StandardResponse_Oauth2SignupResponse_;
    /**
     * Created
     */
    201: unknown;
};

export type SignupUsingPost1Response = SignupUsingPost1Responses[keyof SignupUsingPost1Responses];

export type TokenEndpointUsingPost1Data = {
    body: {
        /**
         * parameters
         */
        parameters: unknown;
    };
    headers: {
        /**
         * Bearer AccessToken
         */
        Authorization?: string;
        /**
         * Application Identifier
         */
        'X-App-Id': string;
        /**
         * App Version
         */
        'X-App-Version': string;
        /**
         * Samsung,...
         */
        'X-Device-Family': string;
        /**
         * Unique Device/Web Identifier
         */
        'X-Device-Id': string;
        'X-Device-Locale': string;
        /**
         * android|ios|web
         */
        'X-Device-Os': string;
        'X-Device-Os-Version': string;
        /**
         * UserId Information
         */
        'X-User-Id'?: string;
    };
    path?: never;
    query?: never;
    url: '/api/v2/oauth/token';
};

export type TokenEndpointUsingPost1Errors = {
    /**
     * Unauthorized
     */
    401: unknown;
    /**
     * Forbidden
     */
    403: unknown;
    /**
     * Not Found
     */
    404: unknown;
};

export type TokenEndpointUsingPost1Responses = {
    /**
     * OK
     */
    200: StandardResponse_Oauth2TokenResponse_;
    /**
     * Created
     */
    201: unknown;
};

export type TokenEndpointUsingPost1Response = TokenEndpointUsingPost1Responses[keyof TokenEndpointUsingPost1Responses];

export type ResendVerificationEmailUsingPatchData = {
    /**
     * request
     */
    body: ResendVerificationEmailRequestV2;
    headers: {
        /**
         * Bearer AccessToken
         */
        Authorization?: string;
        /**
         * Application Identifier
         */
        'X-App-Id': string;
        /**
         * App Version
         */
        'X-App-Version': string;
        /**
         * Samsung,...
         */
        'X-Device-Family': string;
        /**
         * Unique Device/Web Identifier
         */
        'X-Device-Id': string;
        'X-Device-Locale': string;
        /**
         * android|ios|web
         */
        'X-Device-Os': string;
        'X-Device-Os-Version': string;
        /**
         * UserId Information
         */
        'X-User-Id'?: string;
    };
    path?: never;
    query?: never;
    url: '/api/v2/oauth/verification_email';
};

export type ResendVerificationEmailUsingPatchErrors = {
    /**
     * Unauthorized
     */
    401: unknown;
    /**
     * Forbidden
     */
    403: unknown;
};

export type ResendVerificationEmailUsingPatchResponses = {
    /**
     * OK
     */
    200: StandardResponse_Map_;
    /**
     * No Content
     */
    204: unknown;
};

export type ResendVerificationEmailUsingPatchResponse = ResendVerificationEmailUsingPatchResponses[keyof ResendVerificationEmailUsingPatchResponses];

export type DeleteMyAccountUsingDeleteData = {
    body?: never;
    headers: {
        /**
         * Bearer AccessToken
         */
        Authorization?: string;
        /**
         * Application Identifier
         */
        'X-App-Id': string;
        /**
         * App Version
         */
        'X-App-Version': string;
        /**
         * Samsung,...
         */
        'X-Device-Family': string;
        /**
         * Unique Device/Web Identifier
         */
        'X-Device-Id': string;
        'X-Device-Locale': string;
        /**
         * android|ios|web
         */
        'X-Device-Os': string;
        'X-Device-Os-Version': string;
        /**
         * UserId Information
         */
        'X-User-Id'?: string;
    };
    path?: never;
    query?: never;
    url: '/api/v2/portal/account/profile';
};

export type DeleteMyAccountUsingDeleteErrors = {
    /**
     * Unauthorized
     */
    401: unknown;
    /**
     * Forbidden
     */
    403: unknown;
};

export type DeleteMyAccountUsingDeleteResponses = {
    /**
     * OK
     */
    200: StandardResponse;
    /**
     * No Content
     */
    204: unknown;
};

export type DeleteMyAccountUsingDeleteResponse = DeleteMyAccountUsingDeleteResponses[keyof DeleteMyAccountUsingDeleteResponses];

export type GetAccountProfileUsingGetData = {
    body?: never;
    headers: {
        /**
         * Bearer AccessToken
         */
        Authorization?: string;
        /**
         * Application Identifier
         */
        'X-App-Id': string;
        /**
         * App Version
         */
        'X-App-Version': string;
        /**
         * Samsung,...
         */
        'X-Device-Family': string;
        /**
         * Unique Device/Web Identifier
         */
        'X-Device-Id': string;
        'X-Device-Locale': string;
        /**
         * android|ios|web
         */
        'X-Device-Os': string;
        'X-Device-Os-Version': string;
        /**
         * UserId Information
         */
        'X-User-Id'?: string;
    };
    path?: never;
    query?: {
        /**
         * config_info
         */
        config_info?: boolean;
        /**
         * service_info
         */
        service_info?: boolean;
    };
    url: '/api/v2/portal/account/profile';
};

export type GetAccountProfileUsingGetErrors = {
    /**
     * Unauthorized
     */
    401: unknown;
    /**
     * Forbidden
     */
    403: unknown;
    /**
     * Not Found
     */
    404: unknown;
};

export type GetAccountProfileUsingGetResponses = {
    /**
     * OK
     */
    200: StandardResponse_AccountProfileResponse_;
};

export type GetAccountProfileUsingGetResponse = GetAccountProfileUsingGetResponses[keyof GetAccountProfileUsingGetResponses];

export type UpdateAccountProfileUsingPutData = {
    body: {
        /**
         * avatar
         */
        avatar?: Blob | File;
        /**
         * mobile_phone
         */
        mobile_phone?: unknown;
        /**
         * name
         */
        name: unknown;
        /**
         * remove_avatar
         */
        remove_avatar?: unknown;
        /**
         * zone_id
         */
        zone_id?: unknown;
    };
    headers: {
        /**
         * Bearer AccessToken
         */
        Authorization?: string;
        /**
         * Application Identifier
         */
        'X-App-Id': string;
        /**
         * App Version
         */
        'X-App-Version': string;
        /**
         * Samsung,...
         */
        'X-Device-Family': string;
        /**
         * Unique Device/Web Identifier
         */
        'X-Device-Id': string;
        'X-Device-Locale': string;
        /**
         * android|ios|web
         */
        'X-Device-Os': string;
        'X-Device-Os-Version': string;
        /**
         * UserId Information
         */
        'X-User-Id'?: string;
    };
    path?: never;
    query?: never;
    url: '/api/v2/portal/account/profile';
};

export type UpdateAccountProfileUsingPutErrors = {
    /**
     * Unauthorized
     */
    401: unknown;
    /**
     * Forbidden
     */
    403: unknown;
    /**
     * Not Found
     */
    404: unknown;
};

export type UpdateAccountProfileUsingPutResponses = {
    /**
     * OK
     */
    200: StandardResponse_object_;
    /**
     * Created
     */
    201: unknown;
};

export type UpdateAccountProfileUsingPutResponse = UpdateAccountProfileUsingPutResponses[keyof UpdateAccountProfileUsingPutResponses];

export type ResetPasswordInitUsingPostData = {
    /**
     * resetPasswordInitRequest
     */
    body: ResetPasswordInitRequest;
    headers: {
        /**
         * Bearer AccessToken
         */
        Authorization?: string;
        /**
         * Application Identifier
         */
        'X-App-Id': string;
        /**
         * App Version
         */
        'X-App-Version': string;
        /**
         * Samsung,...
         */
        'X-Device-Family': string;
        /**
         * Unique Device/Web Identifier
         */
        'X-Device-Id': string;
        'X-Device-Locale': string;
        /**
         * android|ios|web
         */
        'X-Device-Os': string;
        'X-Device-Os-Version': string;
        /**
         * UserId Information
         */
        'X-User-Id'?: string;
    };
    path?: never;
    query?: never;
    url: '/api/v2/portal/account/reset_password/init';
};

export type ResetPasswordInitUsingPostErrors = {
    /**
     * Unauthorized
     */
    401: unknown;
    /**
     * Forbidden
     */
    403: unknown;
    /**
     * Not Found
     */
    404: unknown;
};

export type ResetPasswordInitUsingPostResponses = {
    /**
     * OK
     */
    200: StandardResponse_object_;
    /**
     * Created
     */
    201: unknown;
};

export type ResetPasswordInitUsingPostResponse = ResetPasswordInitUsingPostResponses[keyof ResetPasswordInitUsingPostResponses];

export type LeaveOrgUsingPostData = {
    /**
     * request
     */
    body: LeaveOrgRequest;
    headers: {
        /**
         * Bearer AccessToken
         */
        Authorization?: string;
        /**
         * Application Identifier
         */
        'X-App-Id': string;
        /**
         * App Version
         */
        'X-App-Version': string;
        /**
         * Samsung,...
         */
        'X-Device-Family': string;
        /**
         * Unique Device/Web Identifier
         */
        'X-Device-Id': string;
        'X-Device-Locale': string;
        /**
         * android|ios|web
         */
        'X-Device-Os': string;
        'X-Device-Os-Version': string;
        /**
         * UserId Information
         */
        'X-User-Id'?: string;
    };
    path?: never;
    query?: never;
    url: '/api/v2/portal/account/unlink';
};

export type LeaveOrgUsingPostErrors = {
    /**
     * Unauthorized
     */
    401: unknown;
    /**
     * Forbidden
     */
    403: unknown;
    /**
     * Not Found
     */
    404: unknown;
};

export type LeaveOrgUsingPostResponses = {
    /**
     * OK
     */
    200: StandardResponse_object_;
    /**
     * Created
     */
    201: unknown;
};

export type LeaveOrgUsingPostResponse = LeaveOrgUsingPostResponses[keyof LeaveOrgUsingPostResponses];

export type PingUsingGetData = {
    body?: never;
    headers: {
        /**
         * Bearer AccessToken
         */
        Authorization?: string;
        /**
         * Application Identifier
         */
        'X-App-Id': string;
        /**
         * App Version
         */
        'X-App-Version': string;
        /**
         * Samsung,...
         */
        'X-Device-Family': string;
        /**
         * Unique Device/Web Identifier
         */
        'X-Device-Id': string;
        'X-Device-Locale': string;
        /**
         * android|ios|web
         */
        'X-Device-Os': string;
        'X-Device-Os-Version': string;
        /**
         * UserId Information
         */
        'X-User-Id'?: string;
    };
    path?: never;
    query?: never;
    url: '/api/v2/portal/monitor/ping';
};

export type PingUsingGetErrors = {
    /**
     * Unauthorized
     */
    401: unknown;
    /**
     * Forbidden
     */
    403: unknown;
    /**
     * Not Found
     */
    404: unknown;
};

export type PingUsingGetResponses = {
    /**
     * OK
     */
    200: StandardResponse_boolean_;
};

export type PingUsingGetResponse = PingUsingGetResponses[keyof PingUsingGetResponses];

export type CreateOrgUsingPostData = {
    body: {
        /**
         * address
         */
        address?: unknown;
        /**
         * allow_org_admin
         */
        allow_org_admin?: unknown;
        /**
         * allow_sub_orgs
         */
        allow_sub_orgs?: unknown;
        /**
         * city
         */
        city?: unknown;
        /**
         * country
         */
        country?: unknown;
        /**
         * desc
         */
        desc?: unknown;
        /**
         * disallow_assets
         */
        disallow_assets?: unknown;
        /**
         * email
         */
        email?: unknown;
        /**
         * logo
         */
        logo?: Blob | File;
        /**
         * name
         */
        name: unknown;
        /**
         * parent
         */
        parent: unknown;
        /**
         * phone
         */
        phone?: unknown;
        /**
         * service_captive
         */
        service_captive?: unknown;
        /**
         * service_fax
         */
        service_fax?: unknown;
        /**
         * service_voicelink
         */
        service_voicelink?: unknown;
        /**
         * state
         */
        state?: unknown;
        /**
         * street
         */
        street?: unknown;
        /**
         * street_number
         */
        street_number?: unknown;
        /**
         * subscription_team_email
         */
        subscription_team_email?: unknown;
        /**
         * technical_support_team_email
         */
        technical_support_team_email?: unknown;
        /**
         * zip_code
         */
        zip_code?: unknown;
    };
    headers: {
        /**
         * Bearer AccessToken
         */
        Authorization?: string;
        /**
         * Application Identifier
         */
        'X-App-Id': string;
        /**
         * App Version
         */
        'X-App-Version': string;
        /**
         * Samsung,...
         */
        'X-Device-Family': string;
        /**
         * Unique Device/Web Identifier
         */
        'X-Device-Id': string;
        'X-Device-Locale': string;
        /**
         * android|ios|web
         */
        'X-Device-Os': string;
        'X-Device-Os-Version': string;
        /**
         * UserId Information
         */
        'X-User-Id'?: string;
    };
    path?: never;
    query?: never;
    url: '/api/v2/portal/org/create';
};

export type CreateOrgUsingPostErrors = {
    /**
     * Unauthorized
     */
    401: unknown;
    /**
     * Forbidden
     */
    403: unknown;
    /**
     * Not Found
     */
    404: unknown;
};

export type CreateOrgUsingPostResponses = {
    /**
     * OK
     */
    200: StandardResponse_LongOrgResponse_;
    /**
     * Created
     */
    201: unknown;
};

export type CreateOrgUsingPostResponse = CreateOrgUsingPostResponses[keyof CreateOrgUsingPostResponses];

export type DeleteOrgUsingDeleteData = {
    body?: never;
    headers: {
        /**
         * Bearer AccessToken
         */
        Authorization?: string;
        /**
         * Application Identifier
         */
        'X-App-Id': string;
        /**
         * App Version
         */
        'X-App-Version': string;
        /**
         * Samsung,...
         */
        'X-Device-Family': string;
        /**
         * Unique Device/Web Identifier
         */
        'X-Device-Id': string;
        'X-Device-Locale': string;
        /**
         * android|ios|web
         */
        'X-Device-Os': string;
        'X-Device-Os-Version': string;
        /**
         * UserId Information
         */
        'X-User-Id'?: string;
    };
    path?: never;
    query?: never;
    url: '/api/v2/portal/org/delete';
};

export type DeleteOrgUsingDeleteErrors = {
    /**
     * Unauthorized
     */
    401: unknown;
    /**
     * Forbidden
     */
    403: unknown;
};

export type DeleteOrgUsingDeleteResponses = {
    /**
     * OK
     */
    200: StandardResponse_object_;
    /**
     * No Content
     */
    204: unknown;
};

export type DeleteOrgUsingDeleteResponse = DeleteOrgUsingDeleteResponses[keyof DeleteOrgUsingDeleteResponses];

export type DetailOrgUsingGetData = {
    body?: never;
    headers: {
        /**
         * Bearer AccessToken
         */
        Authorization?: string;
        /**
         * Application Identifier
         */
        'X-App-Id': string;
        /**
         * App Version
         */
        'X-App-Version': string;
        /**
         * Samsung,...
         */
        'X-Device-Family': string;
        /**
         * Unique Device/Web Identifier
         */
        'X-Device-Id': string;
        'X-Device-Locale': string;
        /**
         * android|ios|web
         */
        'X-Device-Os': string;
        'X-Device-Os-Version': string;
        /**
         * UserId Information
         */
        'X-User-Id'?: string;
    };
    path: {
        /**
         * id
         */
        id: string;
    };
    query?: never;
    url: '/api/v2/portal/org/detail/{id}';
};

export type DetailOrgUsingGetErrors = {
    /**
     * Unauthorized
     */
    401: unknown;
    /**
     * Forbidden
     */
    403: unknown;
    /**
     * Not Found
     */
    404: unknown;
};

export type DetailOrgUsingGetResponses = {
    /**
     * OK
     */
    200: StandardResponse_LongOrgResponse_;
};

export type DetailOrgUsingGetResponse = DetailOrgUsingGetResponses[keyof DetailOrgUsingGetResponses];

export type ListAdminManagerViewerOrgUsingGetData = {
    body?: never;
    headers: {
        /**
         * Bearer AccessToken
         */
        Authorization?: string;
        /**
         * Application Identifier
         */
        'X-App-Id': string;
        /**
         * App Version
         */
        'X-App-Version': string;
        /**
         * Samsung,...
         */
        'X-Device-Family': string;
        /**
         * Unique Device/Web Identifier
         */
        'X-Device-Id': string;
        'X-Device-Locale': string;
        /**
         * android|ios|web
         */
        'X-Device-Os': string;
        'X-Device-Os-Version': string;
        /**
         * UserId Information
         */
        'X-User-Id'?: string;
    };
    path?: never;
    query?: {
        /**
         * exclude_simplifi_org
         */
        exclude_simplifi_org?: boolean;
        /**
         * from_root_org_id
         */
        from_root_org_id?: string;
        /**
         * include_block_org
         */
        include_block_org?: boolean;
        /**
         * service_info
         */
        service_info?: boolean;
    };
    url: '/api/v2/portal/org/group/org/all';
};

export type ListAdminManagerViewerOrgUsingGetErrors = {
    /**
     * Unauthorized
     */
    401: unknown;
    /**
     * Forbidden
     */
    403: unknown;
    /**
     * Not Found
     */
    404: unknown;
};

export type ListAdminManagerViewerOrgUsingGetResponses = {
    /**
     * OK
     */
    200: ListResponse_ShortOrgResponse_;
};

export type ListAdminManagerViewerOrgUsingGetResponse = ListAdminManagerViewerOrgUsingGetResponses[keyof ListAdminManagerViewerOrgUsingGetResponses];

export type ListAdminManagerOrgUsingGetData = {
    body?: never;
    headers: {
        /**
         * Bearer AccessToken
         */
        Authorization?: string;
        /**
         * Application Identifier
         */
        'X-App-Id': string;
        /**
         * App Version
         */
        'X-App-Version': string;
        /**
         * Samsung,...
         */
        'X-Device-Family': string;
        /**
         * Unique Device/Web Identifier
         */
        'X-Device-Id': string;
        'X-Device-Locale': string;
        /**
         * android|ios|web
         */
        'X-Device-Os': string;
        'X-Device-Os-Version': string;
        /**
         * UserId Information
         */
        'X-User-Id'?: string;
    };
    path?: never;
    query?: {
        /**
         * exclude_simplifi_org
         */
        exclude_simplifi_org?: boolean;
        /**
         * from_root_org_id
         */
        from_root_org_id?: string;
        /**
         * service_info
         */
        service_info?: boolean;
    };
    url: '/api/v2/portal/org/group/org/modify';
};

export type ListAdminManagerOrgUsingGetErrors = {
    /**
     * Unauthorized
     */
    401: unknown;
    /**
     * Forbidden
     */
    403: unknown;
    /**
     * Not Found
     */
    404: unknown;
};

export type ListAdminManagerOrgUsingGetResponses = {
    /**
     * OK
     */
    200: ListResponse_ShortOrgResponse_;
};

export type ListAdminManagerOrgUsingGetResponse = ListAdminManagerOrgUsingGetResponses[keyof ListAdminManagerOrgUsingGetResponses];

export type SuspendOrgUsingPutData = {
    /**
     * request
     */
    body: SuspendOrgRequest;
    headers: {
        /**
         * Bearer AccessToken
         */
        Authorization?: string;
        /**
         * Application Identifier
         */
        'X-App-Id': string;
        /**
         * App Version
         */
        'X-App-Version': string;
        /**
         * Samsung,...
         */
        'X-Device-Family': string;
        /**
         * Unique Device/Web Identifier
         */
        'X-Device-Id': string;
        'X-Device-Locale': string;
        /**
         * android|ios|web
         */
        'X-Device-Os': string;
        'X-Device-Os-Version': string;
        /**
         * UserId Information
         */
        'X-User-Id'?: string;
    };
    path?: never;
    query?: never;
    url: '/api/v2/portal/org/suspend';
};

export type SuspendOrgUsingPutErrors = {
    /**
     * Unauthorized
     */
    401: unknown;
    /**
     * Forbidden
     */
    403: unknown;
    /**
     * Not Found
     */
    404: unknown;
};

export type SuspendOrgUsingPutResponses = {
    /**
     * OK
     */
    200: StandardResponse_object_;
    /**
     * Created
     */
    201: unknown;
};

export type SuspendOrgUsingPutResponse = SuspendOrgUsingPutResponses[keyof SuspendOrgUsingPutResponses];

export type UpdateOrgUsingPutData = {
    body: {
        /**
         * address
         */
        address?: unknown;
        /**
         * city
         */
        city?: unknown;
        /**
         * country
         */
        country?: unknown;
        /**
         * desc
         */
        desc?: unknown;
        /**
         * email
         */
        email?: unknown;
        /**
         * id
         */
        id: unknown;
        /**
         * logo
         */
        logo?: Blob | File;
        /**
         * name
         */
        name: unknown;
        /**
         * phone
         */
        phone?: unknown;
        /**
         * remove_logo
         */
        remove_logo?: unknown;
        /**
         * service_captive
         */
        service_captive?: unknown;
        /**
         * service_fax
         */
        service_fax?: unknown;
        /**
         * service_voicelink
         */
        service_voicelink?: unknown;
        /**
         * state
         */
        state?: unknown;
        /**
         * street
         */
        street?: unknown;
        /**
         * street_number
         */
        street_number?: unknown;
        /**
         * subscription_team_email
         */
        subscription_team_email?: unknown;
        /**
         * technical_support_team_email
         */
        technical_support_team_email?: unknown;
        /**
         * zip_code
         */
        zip_code?: unknown;
    };
    headers: {
        /**
         * Bearer AccessToken
         */
        Authorization?: string;
        /**
         * Application Identifier
         */
        'X-App-Id': string;
        /**
         * App Version
         */
        'X-App-Version': string;
        /**
         * Samsung,...
         */
        'X-Device-Family': string;
        /**
         * Unique Device/Web Identifier
         */
        'X-Device-Id': string;
        'X-Device-Locale': string;
        /**
         * android|ios|web
         */
        'X-Device-Os': string;
        'X-Device-Os-Version': string;
        /**
         * UserId Information
         */
        'X-User-Id'?: string;
    };
    path?: never;
    query?: never;
    url: '/api/v2/portal/org/update';
};

export type UpdateOrgUsingPutErrors = {
    /**
     * Unauthorized
     */
    401: unknown;
    /**
     * Forbidden
     */
    403: unknown;
    /**
     * Not Found
     */
    404: unknown;
};

export type UpdateOrgUsingPutResponses = {
    /**
     * OK
     */
    200: StandardResponse_object_;
    /**
     * Created
     */
    201: unknown;
};

export type UpdateOrgUsingPutResponse = UpdateOrgUsingPutResponses[keyof UpdateOrgUsingPutResponses];

export type CreateAccountFromInvitationUsingPostData = {
    /**
     * request
     */
    body: CreateAccountFromInvitation;
    headers: {
        /**
         * Bearer AccessToken
         */
        Authorization?: string;
        /**
         * Application Identifier
         */
        'X-App-Id': string;
        /**
         * App Version
         */
        'X-App-Version': string;
        /**
         * Samsung,...
         */
        'X-Device-Family': string;
        /**
         * Unique Device/Web Identifier
         */
        'X-Device-Id': string;
        'X-Device-Locale': string;
        /**
         * android|ios|web
         */
        'X-Device-Os': string;
        'X-Device-Os-Version': string;
        /**
         * UserId Information
         */
        'X-User-Id'?: string;
    };
    path?: never;
    query?: never;
    url: '/api/v2/portal/user/create-account-1';
};

export type CreateAccountFromInvitationUsingPostErrors = {
    /**
     * Unauthorized
     */
    401: unknown;
    /**
     * Forbidden
     */
    403: unknown;
    /**
     * Not Found
     */
    404: unknown;
};

export type CreateAccountFromInvitationUsingPostResponses = {
    /**
     * OK
     */
    200: StandardResponse_object_;
    /**
     * Created
     */
    201: unknown;
};

export type CreateAccountFromInvitationUsingPostResponse = CreateAccountFromInvitationUsingPostResponses[keyof CreateAccountFromInvitationUsingPostResponses];

export type DeactivateUserUsingPutData = {
    /**
     * request
     */
    body: DeactivateUserRequest;
    headers: {
        /**
         * Bearer AccessToken
         */
        Authorization?: string;
        /**
         * Application Identifier
         */
        'X-App-Id': string;
        /**
         * App Version
         */
        'X-App-Version': string;
        /**
         * Samsung,...
         */
        'X-Device-Family': string;
        /**
         * Unique Device/Web Identifier
         */
        'X-Device-Id': string;
        'X-Device-Locale': string;
        /**
         * android|ios|web
         */
        'X-Device-Os': string;
        'X-Device-Os-Version': string;
        /**
         * UserId Information
         */
        'X-User-Id'?: string;
    };
    path?: never;
    query?: never;
    url: '/api/v2/portal/user/deactivate-user';
};

export type DeactivateUserUsingPutErrors = {
    /**
     * Unauthorized
     */
    401: unknown;
    /**
     * Forbidden
     */
    403: unknown;
    /**
     * Not Found
     */
    404: unknown;
};

export type DeactivateUserUsingPutResponses = {
    /**
     * OK
     */
    200: StandardResponse_object_;
    /**
     * Created
     */
    201: unknown;
};

export type DeactivateUserUsingPutResponse = DeactivateUserUsingPutResponses[keyof DeactivateUserUsingPutResponses];

export type DeleteInvitationUsingDeleteData = {
    body?: never;
    headers: {
        /**
         * Bearer AccessToken
         */
        Authorization?: string;
        /**
         * Application Identifier
         */
        'X-App-Id': string;
        /**
         * App Version
         */
        'X-App-Version': string;
        /**
         * Samsung,...
         */
        'X-Device-Family': string;
        /**
         * Unique Device/Web Identifier
         */
        'X-Device-Id': string;
        'X-Device-Locale': string;
        /**
         * android|ios|web
         */
        'X-Device-Os': string;
        'X-Device-Os-Version': string;
        /**
         * UserId Information
         */
        'X-User-Id'?: string;
    };
    path?: never;
    query?: never;
    url: '/api/v2/portal/user/invitation/delete';
};

export type DeleteInvitationUsingDeleteErrors = {
    /**
     * Unauthorized
     */
    401: unknown;
    /**
     * Forbidden
     */
    403: unknown;
};

export type DeleteInvitationUsingDeleteResponses = {
    /**
     * OK
     */
    200: StandardResponse_object_;
    /**
     * No Content
     */
    204: unknown;
};

export type DeleteInvitationUsingDeleteResponse = DeleteInvitationUsingDeleteResponses[keyof DeleteInvitationUsingDeleteResponses];

export type ListInvitationUsingGetData = {
    body?: never;
    headers: {
        /**
         * Bearer AccessToken
         */
        Authorization?: string;
        /**
         * Application Identifier
         */
        'X-App-Id': string;
        /**
         * App Version
         */
        'X-App-Version': string;
        /**
         * Samsung,...
         */
        'X-Device-Family': string;
        /**
         * Unique Device/Web Identifier
         */
        'X-Device-Id': string;
        'X-Device-Locale': string;
        /**
         * android|ios|web
         */
        'X-Device-Os': string;
        'X-Device-Os-Version': string;
        /**
         * UserId Information
         */
        'X-User-Id'?: string;
    };
    path?: never;
    query?: {
        /**
         * sort
         */
        sort?: string;
    };
    url: '/api/v2/portal/user/invitation/list';
};

export type ListInvitationUsingGetErrors = {
    /**
     * Unauthorized
     */
    401: unknown;
    /**
     * Forbidden
     */
    403: unknown;
    /**
     * Not Found
     */
    404: unknown;
};

export type ListInvitationUsingGetResponses = {
    /**
     * OK
     */
    200: ListResponse_InvitationResponse_;
};

export type ListInvitationUsingGetResponse = ListInvitationUsingGetResponses[keyof ListInvitationUsingGetResponses];

export type PageInvitationUsingGetData = {
    body?: never;
    headers: {
        /**
         * Bearer AccessToken
         */
        Authorization?: string;
        /**
         * Application Identifier
         */
        'X-App-Id': string;
        /**
         * App Version
         */
        'X-App-Version': string;
        /**
         * Samsung,...
         */
        'X-Device-Family': string;
        /**
         * Unique Device/Web Identifier
         */
        'X-Device-Id': string;
        'X-Device-Locale': string;
        /**
         * android|ios|web
         */
        'X-Device-Os': string;
        'X-Device-Os-Version': string;
        /**
         * UserId Information
         */
        'X-User-Id'?: string;
    };
    path?: never;
    query?: {
        /**
         * page
         */
        page?: number;
        /**
         * size
         */
        size?: number;
        /**
         * sort
         */
        sort?: string;
    };
    url: '/api/v2/portal/user/invitation/page';
};

export type PageInvitationUsingGetErrors = {
    /**
     * Unauthorized
     */
    401: unknown;
    /**
     * Forbidden
     */
    403: unknown;
    /**
     * Not Found
     */
    404: unknown;
};

export type PageInvitationUsingGetResponses = {
    /**
     * OK
     */
    200: ListResponse_InvitationResponse_;
};

export type PageInvitationUsingGetResponse = PageInvitationUsingGetResponses[keyof PageInvitationUsingGetResponses];

export type ResendInvitationUsingPostData = {
    /**
     * request
     */
    body: ResendInvitationRequest;
    headers: {
        /**
         * Bearer AccessToken
         */
        Authorization?: string;
        /**
         * Application Identifier
         */
        'X-App-Id': string;
        /**
         * App Version
         */
        'X-App-Version': string;
        /**
         * Samsung,...
         */
        'X-Device-Family': string;
        /**
         * Unique Device/Web Identifier
         */
        'X-Device-Id': string;
        'X-Device-Locale': string;
        /**
         * android|ios|web
         */
        'X-Device-Os': string;
        'X-Device-Os-Version': string;
        /**
         * UserId Information
         */
        'X-User-Id'?: string;
    };
    path?: never;
    query?: never;
    url: '/api/v2/portal/user/invitation/resend';
};

export type ResendInvitationUsingPostErrors = {
    /**
     * Unauthorized
     */
    401: unknown;
    /**
     * Forbidden
     */
    403: unknown;
    /**
     * Not Found
     */
    404: unknown;
};

export type ResendInvitationUsingPostResponses = {
    /**
     * OK
     */
    200: StandardResponse_SendInvitationResponse_;
    /**
     * Created
     */
    201: unknown;
};

export type ResendInvitationUsingPostResponse = ResendInvitationUsingPostResponses[keyof ResendInvitationUsingPostResponses];

export type InviteUserUsingPostData = {
    /**
     * sendInvitationRequest
     */
    body: SendInvitationRequest;
    headers: {
        /**
         * Bearer AccessToken
         */
        Authorization?: string;
        /**
         * Application Identifier
         */
        'X-App-Id': string;
        /**
         * App Version
         */
        'X-App-Version': string;
        /**
         * Samsung,...
         */
        'X-Device-Family': string;
        /**
         * Unique Device/Web Identifier
         */
        'X-Device-Id': string;
        'X-Device-Locale': string;
        /**
         * android|ios|web
         */
        'X-Device-Os': string;
        'X-Device-Os-Version': string;
        /**
         * UserId Information
         */
        'X-User-Id'?: string;
    };
    path?: never;
    query?: never;
    url: '/api/v2/portal/user/invite';
};

export type InviteUserUsingPostErrors = {
    /**
     * Unauthorized
     */
    401: unknown;
    /**
     * Forbidden
     */
    403: unknown;
    /**
     * Not Found
     */
    404: unknown;
};

export type InviteUserUsingPostResponses = {
    /**
     * OK
     */
    200: StandardResponse_SendInvitationResponse_;
    /**
     * Created
     */
    201: unknown;
};

export type InviteUserUsingPostResponse = InviteUserUsingPostResponses[keyof InviteUserUsingPostResponses];

export type ListUserUsingGetData = {
    body?: never;
    headers: {
        /**
         * Bearer AccessToken
         */
        Authorization?: string;
        /**
         * Application Identifier
         */
        'X-App-Id': string;
        /**
         * App Version
         */
        'X-App-Version': string;
        /**
         * Samsung,...
         */
        'X-Device-Family': string;
        /**
         * Unique Device/Web Identifier
         */
        'X-Device-Id': string;
        'X-Device-Locale': string;
        /**
         * android|ios|web
         */
        'X-Device-Os': string;
        'X-Device-Os-Version': string;
        /**
         * UserId Information
         */
        'X-User-Id'?: string;
    };
    path?: never;
    query?: {
        /**
         * org_ids
         */
        org_ids?: Array<string>;
        /**
         * page
         */
        page?: number;
        /**
         * roles
         */
        roles?: Array<string>;
        /**
         * search_text
         */
        search_text?: string;
        /**
         * size
         */
        size?: number;
        /**
         * sort
         */
        sort?: string;
        /**
         * status
         */
        status?: Array<string>;
    };
    url: '/api/v2/portal/user/list';
};

export type ListUserUsingGetErrors = {
    /**
     * Unauthorized
     */
    401: unknown;
    /**
     * Forbidden
     */
    403: unknown;
    /**
     * Not Found
     */
    404: unknown;
};

export type ListUserUsingGetResponses = {
    /**
     * OK
     */
    200: ListResponse_ShortUserResponse_;
};

export type ListUserUsingGetResponse = ListUserUsingGetResponses[keyof ListUserUsingGetResponses];

export type ListRouterManagersUsingGetData = {
    body?: never;
    headers: {
        /**
         * Bearer AccessToken
         */
        Authorization?: string;
        /**
         * Application Identifier
         */
        'X-App-Id': string;
        /**
         * App Version
         */
        'X-App-Version': string;
        /**
         * Samsung,...
         */
        'X-Device-Family': string;
        /**
         * Unique Device/Web Identifier
         */
        'X-Device-Id': string;
        'X-Device-Locale': string;
        /**
         * android|ios|web
         */
        'X-Device-Os': string;
        'X-Device-Os-Version': string;
        /**
         * UserId Information
         */
        'X-User-Id'?: string;
    };
    path?: never;
    query?: {
        /**
         * search_text
         */
        search_text?: string;
        /**
         * sort
         */
        sort?: string;
    };
    url: '/api/v2/portal/user/list/router-managers';
};

export type ListRouterManagersUsingGetErrors = {
    /**
     * Unauthorized
     */
    401: unknown;
    /**
     * Forbidden
     */
    403: unknown;
    /**
     * Not Found
     */
    404: unknown;
};

export type ListRouterManagersUsingGetResponses = {
    /**
     * OK
     */
    200: ListResponse_RouterManagerResponse_;
};

export type ListRouterManagersUsingGetResponse = ListRouterManagersUsingGetResponses[keyof ListRouterManagersUsingGetResponses];

export type UpdateUserProfileUsingPutData = {
    /**
     * request
     */
    body: UpdateUserProfileRequest;
    headers: {
        /**
         * Bearer AccessToken
         */
        Authorization?: string;
        /**
         * Application Identifier
         */
        'X-App-Id': string;
        /**
         * App Version
         */
        'X-App-Version': string;
        /**
         * Samsung,...
         */
        'X-Device-Family': string;
        /**
         * Unique Device/Web Identifier
         */
        'X-Device-Id': string;
        'X-Device-Locale': string;
        /**
         * android|ios|web
         */
        'X-Device-Os': string;
        'X-Device-Os-Version': string;
        /**
         * UserId Information
         */
        'X-User-Id'?: string;
    };
    path?: never;
    query?: never;
    url: '/api/v2/portal/user/profile';
};

export type UpdateUserProfileUsingPutErrors = {
    /**
     * Unauthorized
     */
    401: unknown;
    /**
     * Forbidden
     */
    403: unknown;
    /**
     * Not Found
     */
    404: unknown;
};

export type UpdateUserProfileUsingPutResponses = {
    /**
     * OK
     */
    200: StandardResponse_object_;
    /**
     * Created
     */
    201: unknown;
};

export type UpdateUserProfileUsingPutResponse = UpdateUserProfileUsingPutResponses[keyof UpdateUserProfileUsingPutResponses];

export type DeleteAccountUsingDeleteData = {
    body?: never;
    headers: {
        /**
         * Bearer AccessToken
         */
        Authorization?: string;
        /**
         * Application Identifier
         */
        'X-App-Id': string;
        /**
         * App Version
         */
        'X-App-Version': string;
        /**
         * Samsung,...
         */
        'X-Device-Family': string;
        /**
         * Unique Device/Web Identifier
         */
        'X-Device-Id': string;
        'X-Device-Locale': string;
        /**
         * android|ios|web
         */
        'X-Device-Os': string;
        'X-Device-Os-Version': string;
        /**
         * UserId Information
         */
        'X-User-Id'?: string;
    };
    path: {
        /**
         * id
         */
        id: string;
    };
    query?: never;
    url: '/api/v2/portal/user/profile/{id}';
};

export type DeleteAccountUsingDeleteErrors = {
    /**
     * Unauthorized
     */
    401: unknown;
    /**
     * Forbidden
     */
    403: unknown;
};

export type DeleteAccountUsingDeleteResponses = {
    /**
     * OK
     */
    200: StandardResponse;
    /**
     * No Content
     */
    204: unknown;
};

export type DeleteAccountUsingDeleteResponse = DeleteAccountUsingDeleteResponses[keyof DeleteAccountUsingDeleteResponses];

export type GetUserProfileUsingGetData = {
    body?: never;
    headers: {
        /**
         * Bearer AccessToken
         */
        Authorization?: string;
        /**
         * Application Identifier
         */
        'X-App-Id': string;
        /**
         * App Version
         */
        'X-App-Version': string;
        /**
         * Samsung,...
         */
        'X-Device-Family': string;
        /**
         * Unique Device/Web Identifier
         */
        'X-Device-Id': string;
        'X-Device-Locale': string;
        /**
         * android|ios|web
         */
        'X-Device-Os': string;
        'X-Device-Os-Version': string;
        /**
         * UserId Information
         */
        'X-User-Id'?: string;
    };
    path: {
        /**
         * id
         */
        id: string;
    };
    query?: {
        /**
         * service_info
         */
        service_info?: boolean;
    };
    url: '/api/v2/portal/user/profile/{id}';
};

export type GetUserProfileUsingGetErrors = {
    /**
     * Unauthorized
     */
    401: unknown;
    /**
     * Forbidden
     */
    403: unknown;
    /**
     * Not Found
     */
    404: unknown;
};

export type GetUserProfileUsingGetResponses = {
    /**
     * OK
     */
    200: StandardResponse_userProfileResponse_;
};

export type GetUserProfileUsingGetResponse = GetUserProfileUsingGetResponses[keyof GetUserProfileUsingGetResponses];

export type BrowseUserTrackingUsingPost1Data = {
    /**
     * request
     */
    body: UserTrackingBrowseRequest;
    headers: {
        /**
         * Bearer AccessToken
         */
        Authorization?: string;
        /**
         * Application Identifier
         */
        'X-App-Id': string;
        /**
         * App Version
         */
        'X-App-Version': string;
        /**
         * Samsung,...
         */
        'X-Device-Family': string;
        /**
         * Unique Device/Web Identifier
         */
        'X-Device-Id': string;
        'X-Device-Locale': string;
        /**
         * android|ios|web
         */
        'X-Device-Os': string;
        'X-Device-Os-Version': string;
        /**
         * UserId Information
         */
        'X-User-Id'?: string;
    };
    path?: never;
    query?: never;
    url: '/api/v2/user_tracking/browse';
};

export type BrowseUserTrackingUsingPost1Errors = {
    /**
     * Unauthorized
     */
    401: unknown;
    /**
     * Forbidden
     */
    403: unknown;
    /**
     * Not Found
     */
    404: unknown;
};

export type BrowseUserTrackingUsingPost1Responses = {
    /**
     * OK
     */
    200: StandardResponse_userTrackingBrowseResponse_;
    /**
     * Created
     */
    201: unknown;
};

export type BrowseUserTrackingUsingPost1Response = BrowseUserTrackingUsingPost1Responses[keyof BrowseUserTrackingUsingPost1Responses];

export type WriteUserTrackingUsingPost1Data = {
    /**
     * userTrackingRequest
     */
    body: UserTrackingsRequest;
    headers: {
        /**
         * Bearer AccessToken
         */
        Authorization?: string;
        /**
         * Application Identifier
         */
        'X-App-Id': string;
        /**
         * App Version
         */
        'X-App-Version': string;
        /**
         * Samsung,...
         */
        'X-Device-Family': string;
        /**
         * Unique Device/Web Identifier
         */
        'X-Device-Id': string;
        'X-Device-Locale': string;
        /**
         * android|ios|web
         */
        'X-Device-Os': string;
        'X-Device-Os-Version': string;
        /**
         * UserId Information
         */
        'X-User-Id'?: string;
    };
    path?: never;
    query?: never;
    url: '/api/v2/user_tracking/write';
};

export type WriteUserTrackingUsingPost1Errors = {
    /**
     * Unauthorized
     */
    401: unknown;
    /**
     * Forbidden
     */
    403: unknown;
    /**
     * Not Found
     */
    404: unknown;
};

export type WriteUserTrackingUsingPost1Responses = {
    /**
     * OK
     */
    200: StandardResponse_userTrackingsResponse_;
    /**
     * Created
     */
    201: unknown;
};

export type WriteUserTrackingUsingPost1Response = WriteUserTrackingUsingPost1Responses[keyof WriteUserTrackingUsingPost1Responses];

export type ExportUserListUsingPostData = {
    /**
     * request
     */
    body: BrowseUserExportRequest;
    headers: {
        /**
         * Bearer AccessToken
         */
        Authorization?: string;
        /**
         * Application Identifier
         */
        'X-App-Id': string;
        /**
         * App Version
         */
        'X-App-Version': string;
        /**
         * Samsung,...
         */
        'X-Device-Family': string;
        /**
         * Unique Device/Web Identifier
         */
        'X-Device-Id': string;
        'X-Device-Locale': string;
        /**
         * android|ios|web
         */
        'X-Device-Os': string;
        'X-Device-Os-Version': string;
        /**
         * UserId Information
         */
        'X-User-Id'?: string;
    };
    path?: never;
    query?: never;
    url: '/api/v3/portal/user/export';
};

export type ExportUserListUsingPostErrors = {
    /**
     * Unauthorized
     */
    401: unknown;
    /**
     * Forbidden
     */
    403: unknown;
    /**
     * Not Found
     */
    404: unknown;
};

export type ExportUserListUsingPostResponses = {
    /**
     * OK
     */
    200: unknown;
    /**
     * Created
     */
    201: unknown;
};

export type FindUserListUsingPostData = {
    /**
     * request
     */
    body: FindUserListV3Request;
    headers: {
        /**
         * Bearer AccessToken
         */
        Authorization?: string;
        /**
         * Application Identifier
         */
        'X-App-Id': string;
        /**
         * App Version
         */
        'X-App-Version': string;
        /**
         * Samsung,...
         */
        'X-Device-Family': string;
        /**
         * Unique Device/Web Identifier
         */
        'X-Device-Id': string;
        'X-Device-Locale': string;
        /**
         * android|ios|web
         */
        'X-Device-Os': string;
        'X-Device-Os-Version': string;
        /**
         * UserId Information
         */
        'X-User-Id'?: string;
    };
    path?: never;
    query?: never;
    url: '/api/v3/portal/user/list';
};

export type FindUserListUsingPostErrors = {
    /**
     * Unauthorized
     */
    401: unknown;
    /**
     * Forbidden
     */
    403: unknown;
    /**
     * Not Found
     */
    404: unknown;
};

export type FindUserListUsingPostResponses = {
    /**
     * OK
     */
    200: ListResponse_ShortUserResponse_;
    /**
     * Created
     */
    201: unknown;
};

export type FindUserListUsingPostResponse = FindUserListUsingPostResponses[keyof FindUserListUsingPostResponses];

export type GetOpenAppUsingGetData = {
    body?: never;
    headers: {
        /**
         * Bearer AccessToken
         */
        Authorization?: string;
        /**
         * Application Identifier
         */
        'X-App-Id': string;
        /**
         * App Version
         */
        'X-App-Version': string;
        /**
         * Samsung,...
         */
        'X-Device-Family': string;
        /**
         * Unique Device/Web Identifier
         */
        'X-Device-Id': string;
        'X-Device-Locale': string;
        /**
         * android|ios|web
         */
        'X-Device-Os': string;
        'X-Device-Os-Version': string;
        /**
         * UserId Information
         */
        'X-User-Id'?: string;
    };
    path?: never;
    query?: never;
    url: '/apple-app-site-association';
};

export type GetOpenAppUsingGetErrors = {
    /**
     * Unauthorized
     */
    401: unknown;
    /**
     * Forbidden
     */
    403: unknown;
    /**
     * Not Found
     */
    404: unknown;
};

export type GetOpenAppUsingGetResponses = {
    /**
     * OK
     */
    200: Resource;
};

export type GetOpenAppUsingGetResponse = GetOpenAppUsingGetResponses[keyof GetOpenAppUsingGetResponses];

export type AddUserOrganizationUsingPostData = {
    /**
     * request
     */
    body: AddUserOrganizationRequest;
    headers: {
        /**
         * Bearer AccessToken
         */
        Authorization?: string;
        /**
         * Application Identifier
         */
        'X-App-Id': string;
        /**
         * App Version
         */
        'X-App-Version': string;
        /**
         * Samsung,...
         */
        'X-Device-Family': string;
        /**
         * Unique Device/Web Identifier
         */
        'X-Device-Id': string;
        'X-Device-Locale': string;
        /**
         * android|ios|web
         */
        'X-Device-Os': string;
        'X-Device-Os-Version': string;
        /**
         * UserId Information
         */
        'X-User-Id'?: string;
    };
    path?: never;
    query?: never;
    url: '/internal/add-user-organization';
};

export type AddUserOrganizationUsingPostErrors = {
    /**
     * Unauthorized
     */
    401: unknown;
    /**
     * Forbidden
     */
    403: unknown;
    /**
     * Not Found
     */
    404: unknown;
};

export type AddUserOrganizationUsingPostResponses = {
    /**
     * OK
     */
    200: StandardResponse_userProfileResponse_;
    /**
     * Created
     */
    201: unknown;
};

export type AddUserOrganizationUsingPostResponse = AddUserOrganizationUsingPostResponses[keyof AddUserOrganizationUsingPostResponses];

export type GetAppConfigurationByTypeNameUsingGetData = {
    body?: never;
    headers: {
        /**
         * Bearer AccessToken
         */
        Authorization?: string;
        /**
         * Application Identifier
         */
        'X-App-Id': string;
        /**
         * App Version
         */
        'X-App-Version': string;
        /**
         * Samsung,...
         */
        'X-Device-Family': string;
        /**
         * Unique Device/Web Identifier
         */
        'X-Device-Id': string;
        'X-Device-Locale': string;
        /**
         * android|ios|web
         */
        'X-Device-Os': string;
        'X-Device-Os-Version': string;
        /**
         * UserId Information
         */
        'X-User-Id'?: string;
    };
    path: {
        /**
         * name
         */
        name: string;
        /**
         * type
         */
        type: string;
    };
    query?: {
        /**
         * raw
         */
        raw?: boolean;
    };
    url: '/internal/app-configuration/config/{type}/{name}';
};

export type GetAppConfigurationByTypeNameUsingGetErrors = {
    /**
     * Unauthorized
     */
    401: unknown;
    /**
     * Forbidden
     */
    403: unknown;
    /**
     * Not Found
     */
    404: unknown;
};

export type GetAppConfigurationByTypeNameUsingGetResponses = {
    /**
     * OK
     */
    200: StandardResponse_AppConfigurationResponse_;
};

export type GetAppConfigurationByTypeNameUsingGetResponse = GetAppConfigurationByTypeNameUsingGetResponses[keyof GetAppConfigurationByTypeNameUsingGetResponses];

export type ChangeAuth0SignKeyUsingGetData = {
    body?: never;
    headers: {
        /**
         * Bearer AccessToken
         */
        Authorization?: string;
        /**
         * Application Identifier
         */
        'X-App-Id': string;
        /**
         * App Version
         */
        'X-App-Version': string;
        /**
         * Samsung,...
         */
        'X-Device-Family': string;
        /**
         * Unique Device/Web Identifier
         */
        'X-Device-Id': string;
        'X-Device-Locale': string;
        /**
         * android|ios|web
         */
        'X-Device-Os': string;
        'X-Device-Os-Version': string;
        /**
         * UserId Information
         */
        'X-User-Id'?: string;
    };
    path?: never;
    query?: never;
    url: '/internal/auth0/change/signkey';
};

export type ChangeAuth0SignKeyUsingGetErrors = {
    /**
     * Unauthorized
     */
    401: unknown;
    /**
     * Forbidden
     */
    403: unknown;
    /**
     * Not Found
     */
    404: unknown;
};

export type ChangeAuth0SignKeyUsingGetResponses = {
    /**
     * OK
     */
    200: StandardResponse_object_;
};

export type ChangeAuth0SignKeyUsingGetResponse = ChangeAuth0SignKeyUsingGetResponses[keyof ChangeAuth0SignKeyUsingGetResponses];

export type BatchUsersUsingPostData = {
    /**
     * request
     */
    body: BatchUsersRequest;
    headers: {
        /**
         * Bearer AccessToken
         */
        Authorization?: string;
        /**
         * Application Identifier
         */
        'X-App-Id': string;
        /**
         * App Version
         */
        'X-App-Version': string;
        /**
         * Samsung,...
         */
        'X-Device-Family': string;
        /**
         * Unique Device/Web Identifier
         */
        'X-Device-Id': string;
        'X-Device-Locale': string;
        /**
         * android|ios|web
         */
        'X-Device-Os': string;
        'X-Device-Os-Version': string;
        /**
         * UserId Information
         */
        'X-User-Id'?: string;
    };
    path?: never;
    query?: never;
    url: '/internal/batch-users';
};

export type BatchUsersUsingPostErrors = {
    /**
     * Unauthorized
     */
    401: unknown;
    /**
     * Forbidden
     */
    403: unknown;
    /**
     * Not Found
     */
    404: unknown;
};

export type BatchUsersUsingPostResponses = {
    /**
     * OK
     */
    200: StandardResponse_Map_string_List_userData___;
    /**
     * Created
     */
    201: unknown;
};

export type BatchUsersUsingPostResponse = BatchUsersUsingPostResponses[keyof BatchUsersUsingPostResponses];

export type FindOrgServiceByIdsUsingPostData = {
    /**
     * request
     */
    body: FindOrganizationsByIdsRequest;
    headers: {
        /**
         * Bearer AccessToken
         */
        Authorization?: string;
        /**
         * Application Identifier
         */
        'X-App-Id': string;
        /**
         * App Version
         */
        'X-App-Version': string;
        /**
         * Samsung,...
         */
        'X-Device-Family': string;
        /**
         * Unique Device/Web Identifier
         */
        'X-Device-Id': string;
        'X-Device-Locale': string;
        /**
         * android|ios|web
         */
        'X-Device-Os': string;
        'X-Device-Os-Version': string;
        /**
         * UserId Information
         */
        'X-User-Id'?: string;
    };
    path?: never;
    query?: never;
    url: '/internal/cache/find-org-service-by-ids';
};

export type FindOrgServiceByIdsUsingPostErrors = {
    /**
     * Unauthorized
     */
    401: unknown;
    /**
     * Forbidden
     */
    403: unknown;
    /**
     * Not Found
     */
    404: unknown;
};

export type FindOrgServiceByIdsUsingPostResponses = {
    /**
     * OK
     */
    200: StandardResponse_List_OrgServiceCacheData__;
    /**
     * Created
     */
    201: unknown;
};

export type FindOrgServiceByIdsUsingPostResponse = FindOrgServiceByIdsUsingPostResponses[keyof FindOrgServiceByIdsUsingPostResponses];

export type ClearAllUserSessionsUsingPostData = {
    body?: never;
    headers: {
        /**
         * Bearer AccessToken
         */
        Authorization?: string;
        /**
         * Application Identifier
         */
        'X-App-Id': string;
        /**
         * App Version
         */
        'X-App-Version': string;
        /**
         * Samsung,...
         */
        'X-Device-Family': string;
        /**
         * Unique Device/Web Identifier
         */
        'X-Device-Id': string;
        'X-Device-Locale': string;
        /**
         * android|ios|web
         */
        'X-Device-Os': string;
        'X-Device-Os-Version': string;
        /**
         * UserId Information
         */
        'X-User-Id'?: string;
    };
    path?: never;
    query?: never;
    url: '/internal/clear-all-user-sessions';
};

export type ClearAllUserSessionsUsingPostErrors = {
    /**
     * Unauthorized
     */
    401: unknown;
    /**
     * Forbidden
     */
    403: unknown;
    /**
     * Not Found
     */
    404: unknown;
};

export type ClearAllUserSessionsUsingPostResponses = {
    /**
     * OK
     */
    200: StandardResponse_object_;
    /**
     * Created
     */
    201: unknown;
};

export type ClearAllUserSessionsUsingPostResponse = ClearAllUserSessionsUsingPostResponses[keyof ClearAllUserSessionsUsingPostResponses];

export type DeleteUserOrganizationDeviceManagerUsingPostData = {
    /**
     * request
     */
    body: DeleteUserOrganizationRequest;
    headers: {
        /**
         * Bearer AccessToken
         */
        Authorization?: string;
        /**
         * Application Identifier
         */
        'X-App-Id': string;
        /**
         * App Version
         */
        'X-App-Version': string;
        /**
         * Samsung,...
         */
        'X-Device-Family': string;
        /**
         * Unique Device/Web Identifier
         */
        'X-Device-Id': string;
        'X-Device-Locale': string;
        /**
         * android|ios|web
         */
        'X-Device-Os': string;
        'X-Device-Os-Version': string;
        /**
         * UserId Information
         */
        'X-User-Id'?: string;
    };
    path?: never;
    query?: never;
    url: '/internal/delete-user-organization-device-manager';
};

export type DeleteUserOrganizationDeviceManagerUsingPostErrors = {
    /**
     * Unauthorized
     */
    401: unknown;
    /**
     * Forbidden
     */
    403: unknown;
    /**
     * Not Found
     */
    404: unknown;
};

export type DeleteUserOrganizationDeviceManagerUsingPostResponses = {
    /**
     * OK
     */
    200: StandardResponse_userProfileResponse_;
    /**
     * Created
     */
    201: unknown;
};

export type DeleteUserOrganizationDeviceManagerUsingPostResponse = DeleteUserOrganizationDeviceManagerUsingPostResponses[keyof DeleteUserOrganizationDeviceManagerUsingPostResponses];

export type FindOrganizationsAndRelateDataByIdsUsingPostData = {
    /**
     * request
     */
    body: FindOrganizationsByIdsRequest;
    headers: {
        /**
         * Bearer AccessToken
         */
        Authorization?: string;
        /**
         * Application Identifier
         */
        'X-App-Id': string;
        /**
         * App Version
         */
        'X-App-Version': string;
        /**
         * Samsung,...
         */
        'X-Device-Family': string;
        /**
         * Unique Device/Web Identifier
         */
        'X-Device-Id': string;
        'X-Device-Locale': string;
        /**
         * android|ios|web
         */
        'X-Device-Os': string;
        'X-Device-Os-Version': string;
        /**
         * UserId Information
         */
        'X-User-Id'?: string;
    };
    path?: never;
    query?: never;
    url: '/internal/find-org-and-relate-data-by-ids';
};

export type FindOrganizationsAndRelateDataByIdsUsingPostErrors = {
    /**
     * Unauthorized
     */
    401: unknown;
    /**
     * Forbidden
     */
    403: unknown;
    /**
     * Not Found
     */
    404: unknown;
};

export type FindOrganizationsAndRelateDataByIdsUsingPostResponses = {
    /**
     * OK
     */
    200: StandardResponse_List_OrgAndRelateDataResponse__;
    /**
     * Created
     */
    201: unknown;
};

export type FindOrganizationsAndRelateDataByIdsUsingPostResponse = FindOrganizationsAndRelateDataByIdsUsingPostResponses[keyof FindOrganizationsAndRelateDataByIdsUsingPostResponses];

export type FindOrganizationsByIdsUsingPostData = {
    /**
     * request
     */
    body: FindOrganizationsByIdsRequest;
    headers: {
        /**
         * Bearer AccessToken
         */
        Authorization?: string;
        /**
         * Application Identifier
         */
        'X-App-Id': string;
        /**
         * App Version
         */
        'X-App-Version': string;
        /**
         * Samsung,...
         */
        'X-Device-Family': string;
        /**
         * Unique Device/Web Identifier
         */
        'X-Device-Id': string;
        'X-Device-Locale': string;
        /**
         * android|ios|web
         */
        'X-Device-Os': string;
        'X-Device-Os-Version': string;
        /**
         * UserId Information
         */
        'X-User-Id'?: string;
    };
    path?: never;
    query?: never;
    url: '/internal/find-organizations-by-ids';
};

export type FindOrganizationsByIdsUsingPostErrors = {
    /**
     * Unauthorized
     */
    401: unknown;
    /**
     * Forbidden
     */
    403: unknown;
    /**
     * Not Found
     */
    404: unknown;
};

export type FindOrganizationsByIdsUsingPostResponses = {
    /**
     * OK
     */
    200: ListResponse_ProxyOrganization_;
    /**
     * Created
     */
    201: unknown;
};

export type FindOrganizationsByIdsUsingPostResponse = FindOrganizationsByIdsUsingPostResponses[keyof FindOrganizationsByIdsUsingPostResponses];

export type FindOrganizationsByTagsUsingPostData = {
    /**
     * request
     */
    body: FindOrganizationsByTagsRequest;
    headers: {
        /**
         * Bearer AccessToken
         */
        Authorization?: string;
        /**
         * Application Identifier
         */
        'X-App-Id': string;
        /**
         * App Version
         */
        'X-App-Version': string;
        /**
         * Samsung,...
         */
        'X-Device-Family': string;
        /**
         * Unique Device/Web Identifier
         */
        'X-Device-Id': string;
        'X-Device-Locale': string;
        /**
         * android|ios|web
         */
        'X-Device-Os': string;
        'X-Device-Os-Version': string;
        /**
         * UserId Information
         */
        'X-User-Id'?: string;
    };
    path?: never;
    query?: never;
    url: '/internal/find-organizations-by-tags';
};

export type FindOrganizationsByTagsUsingPostErrors = {
    /**
     * Unauthorized
     */
    401: unknown;
    /**
     * Forbidden
     */
    403: unknown;
    /**
     * Not Found
     */
    404: unknown;
};

export type FindOrganizationsByTagsUsingPostResponses = {
    /**
     * OK
     */
    200: ListResponse_ProxyOrganization_;
    /**
     * Created
     */
    201: unknown;
};

export type FindOrganizationsByTagsUsingPostResponse = FindOrganizationsByTagsUsingPostResponses[keyof FindOrganizationsByTagsUsingPostResponses];

export type FindOrganizationsRelateToUserUsingPostData = {
    /**
     * request
     */
    body: FindGroupOrganizationsRequest;
    headers: {
        /**
         * Bearer AccessToken
         */
        Authorization?: string;
        /**
         * Application Identifier
         */
        'X-App-Id': string;
        /**
         * App Version
         */
        'X-App-Version': string;
        /**
         * Samsung,...
         */
        'X-Device-Family': string;
        /**
         * Unique Device/Web Identifier
         */
        'X-Device-Id': string;
        'X-Device-Locale': string;
        /**
         * android|ios|web
         */
        'X-Device-Os': string;
        'X-Device-Os-Version': string;
        /**
         * UserId Information
         */
        'X-User-Id'?: string;
    };
    path?: never;
    query?: never;
    url: '/internal/find-organizations-group';
};

export type FindOrganizationsRelateToUserUsingPostErrors = {
    /**
     * Unauthorized
     */
    401: unknown;
    /**
     * Forbidden
     */
    403: unknown;
    /**
     * Not Found
     */
    404: unknown;
};

export type FindOrganizationsRelateToUserUsingPostResponses = {
    /**
     * OK
     */
    200: StandardResponse_ManagerSession_;
    /**
     * Created
     */
    201: unknown;
};

export type FindOrganizationsRelateToUserUsingPostResponse = FindOrganizationsRelateToUserUsingPostResponses[keyof FindOrganizationsRelateToUserUsingPostResponses];

export type IsOrgValidUsingGetData = {
    body?: never;
    headers: {
        /**
         * Bearer AccessToken
         */
        Authorization?: string;
        /**
         * Application Identifier
         */
        'X-App-Id': string;
        /**
         * App Version
         */
        'X-App-Version': string;
        /**
         * Samsung,...
         */
        'X-Device-Family': string;
        /**
         * Unique Device/Web Identifier
         */
        'X-Device-Id': string;
        'X-Device-Locale': string;
        /**
         * android|ios|web
         */
        'X-Device-Os': string;
        'X-Device-Os-Version': string;
        /**
         * UserId Information
         */
        'X-User-Id'?: string;
    };
    path?: never;
    query: {
        /**
         * id
         */
        id: string;
        /**
         * suspended_flag
         */
        suspended_flag: boolean;
    };
    url: '/internal/is-org-valid';
};

export type IsOrgValidUsingGetErrors = {
    /**
     * Unauthorized
     */
    401: unknown;
    /**
     * Forbidden
     */
    403: unknown;
    /**
     * Not Found
     */
    404: unknown;
};

export type IsOrgValidUsingGetResponses = {
    /**
     * OK
     */
    200: StandardResponse_boolean_;
};

export type IsOrgValidUsingGetResponse = IsOrgValidUsingGetResponses[keyof IsOrgValidUsingGetResponses];

export type FindOrgUsingGetData = {
    body?: never;
    headers: {
        /**
         * Bearer AccessToken
         */
        Authorization?: string;
        /**
         * Application Identifier
         */
        'X-App-Id': string;
        /**
         * App Version
         */
        'X-App-Version': string;
        /**
         * Samsung,...
         */
        'X-Device-Family': string;
        /**
         * Unique Device/Web Identifier
         */
        'X-Device-Id': string;
        'X-Device-Locale': string;
        /**
         * android|ios|web
         */
        'X-Device-Os': string;
        'X-Device-Os-Version': string;
        /**
         * UserId Information
         */
        'X-User-Id'?: string;
    };
    path: {
        /**
         * id
         */
        id: string;
    };
    query?: never;
    url: '/internal/org/find/{id}';
};

export type FindOrgUsingGetErrors = {
    /**
     * Unauthorized
     */
    401: unknown;
    /**
     * Forbidden
     */
    403: unknown;
    /**
     * Not Found
     */
    404: unknown;
};

export type FindOrgUsingGetResponses = {
    /**
     * OK
     */
    200: StandardResponse_object_;
};

export type FindOrgUsingGetResponse = FindOrgUsingGetResponses[keyof FindOrgUsingGetResponses];

export type FindOrgDescendantsUsingGetData = {
    body?: never;
    headers: {
        /**
         * Bearer AccessToken
         */
        Authorization?: string;
        /**
         * Application Identifier
         */
        'X-App-Id': string;
        /**
         * App Version
         */
        'X-App-Version': string;
        /**
         * Samsung,...
         */
        'X-Device-Family': string;
        /**
         * Unique Device/Web Identifier
         */
        'X-Device-Id': string;
        'X-Device-Locale': string;
        /**
         * android|ios|web
         */
        'X-Device-Os': string;
        'X-Device-Os-Version': string;
        /**
         * UserId Information
         */
        'X-User-Id'?: string;
    };
    path: {
        /**
         * id
         */
        id: string;
    };
    query?: never;
    url: '/internal/org/find_descendants/{id}';
};

export type FindOrgDescendantsUsingGetErrors = {
    /**
     * Unauthorized
     */
    401: unknown;
    /**
     * Forbidden
     */
    403: unknown;
    /**
     * Not Found
     */
    404: unknown;
};

export type FindOrgDescendantsUsingGetResponses = {
    /**
     * OK
     */
    200: StandardResponse_List_OrganizationInfo__;
};

export type FindOrgDescendantsUsingGetResponse = FindOrgDescendantsUsingGetResponses[keyof FindOrgDescendantsUsingGetResponses];

export type InternalSendReportUserActivityUsingPostData = {
    body?: never;
    headers: {
        /**
         * Bearer AccessToken
         */
        Authorization?: string;
        /**
         * Application Identifier
         */
        'X-App-Id': string;
        /**
         * App Version
         */
        'X-App-Version': string;
        /**
         * Samsung,...
         */
        'X-Device-Family': string;
        /**
         * Unique Device/Web Identifier
         */
        'X-Device-Id': string;
        'X-Device-Locale': string;
        /**
         * android|ios|web
         */
        'X-Device-Os': string;
        'X-Device-Os-Version': string;
        /**
         * UserId Information
         */
        'X-User-Id'?: string;
    };
    path?: never;
    query?: never;
    url: '/internal/report/send-report-user-activity';
};

export type InternalSendReportUserActivityUsingPostErrors = {
    /**
     * Unauthorized
     */
    401: unknown;
    /**
     * Forbidden
     */
    403: unknown;
    /**
     * Not Found
     */
    404: unknown;
};

export type InternalSendReportUserActivityUsingPostResponses = {
    /**
     * OK
     */
    200: StandardResponse_object_;
    /**
     * Created
     */
    201: unknown;
};

export type InternalSendReportUserActivityUsingPostResponse = InternalSendReportUserActivityUsingPostResponses[keyof InternalSendReportUserActivityUsingPostResponses];

export type GetUsersByEmailsUsingPostData = {
    /**
     * request
     */
    body: UsersByEmailsRequest;
    headers: {
        /**
         * Bearer AccessToken
         */
        Authorization?: string;
        /**
         * Application Identifier
         */
        'X-App-Id': string;
        /**
         * App Version
         */
        'X-App-Version': string;
        /**
         * Samsung,...
         */
        'X-Device-Family': string;
        /**
         * Unique Device/Web Identifier
         */
        'X-Device-Id': string;
        'X-Device-Locale': string;
        /**
         * android|ios|web
         */
        'X-Device-Os': string;
        'X-Device-Os-Version': string;
        /**
         * UserId Information
         */
        'X-User-Id'?: string;
    };
    path?: never;
    query?: never;
    url: '/internal/user/find-by-emails';
};

export type GetUsersByEmailsUsingPostErrors = {
    /**
     * Unauthorized
     */
    401: unknown;
    /**
     * Forbidden
     */
    403: unknown;
    /**
     * Not Found
     */
    404: unknown;
};

export type GetUsersByEmailsUsingPostResponses = {
    /**
     * OK
     */
    200: StandardResponse_userListResponse_;
    /**
     * Created
     */
    201: unknown;
};

export type GetUsersByEmailsUsingPostResponse = GetUsersByEmailsUsingPostResponses[keyof GetUsersByEmailsUsingPostResponses];

export type GetUsersByIdsUsingPostData = {
    /**
     * request
     */
    body: ListIdRequest;
    headers: {
        /**
         * Bearer AccessToken
         */
        Authorization?: string;
        /**
         * Application Identifier
         */
        'X-App-Id': string;
        /**
         * App Version
         */
        'X-App-Version': string;
        /**
         * Samsung,...
         */
        'X-Device-Family': string;
        /**
         * Unique Device/Web Identifier
         */
        'X-Device-Id': string;
        'X-Device-Locale': string;
        /**
         * android|ios|web
         */
        'X-Device-Os': string;
        'X-Device-Os-Version': string;
        /**
         * UserId Information
         */
        'X-User-Id'?: string;
    };
    path?: never;
    query?: never;
    url: '/internal/user/find-by-ids';
};

export type GetUsersByIdsUsingPostErrors = {
    /**
     * Unauthorized
     */
    401: unknown;
    /**
     * Forbidden
     */
    403: unknown;
    /**
     * Not Found
     */
    404: unknown;
};

export type GetUsersByIdsUsingPostResponses = {
    /**
     * OK
     */
    200: StandardResponse_userListResponse_;
    /**
     * Created
     */
    201: unknown;
};

export type GetUsersByIdsUsingPostResponse = GetUsersByIdsUsingPostResponses[keyof GetUsersByIdsUsingPostResponses];

export type GetAndroidInternalUsingGetData = {
    body?: never;
    headers: {
        /**
         * Bearer AccessToken
         */
        Authorization?: string;
        /**
         * Application Identifier
         */
        'X-App-Id': string;
        /**
         * App Version
         */
        'X-App-Version': string;
        /**
         * Samsung,...
         */
        'X-Device-Family': string;
        /**
         * Unique Device/Web Identifier
         */
        'X-Device-Id': string;
        'X-Device-Locale': string;
        /**
         * android|ios|web
         */
        'X-Device-Os': string;
        'X-Device-Os-Version': string;
        /**
         * UserId Information
         */
        'X-User-Id'?: string;
    };
    path?: never;
    query?: never;
    url: '/openapp/android/internal';
};

export type GetAndroidInternalUsingGetErrors = {
    /**
     * Unauthorized
     */
    401: unknown;
    /**
     * Forbidden
     */
    403: unknown;
    /**
     * Not Found
     */
    404: unknown;
};

export type GetAndroidInternalUsingGetResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type GetIosConnectUsingGetData = {
    body?: never;
    headers: {
        /**
         * Bearer AccessToken
         */
        Authorization?: string;
        /**
         * Application Identifier
         */
        'X-App-Id': string;
        /**
         * App Version
         */
        'X-App-Version': string;
        /**
         * Samsung,...
         */
        'X-Device-Family': string;
        /**
         * Unique Device/Web Identifier
         */
        'X-Device-Id': string;
        'X-Device-Locale': string;
        /**
         * android|ios|web
         */
        'X-Device-Os': string;
        'X-Device-Os-Version': string;
        /**
         * UserId Information
         */
        'X-User-Id'?: string;
    };
    path?: never;
    query?: never;
    url: '/openapp/ios/connect';
};

export type GetIosConnectUsingGetErrors = {
    /**
     * Unauthorized
     */
    401: unknown;
    /**
     * Forbidden
     */
    403: unknown;
    /**
     * Not Found
     */
    404: unknown;
};

export type GetIosConnectUsingGetResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type GetIosInternalUsingGetData = {
    body?: never;
    headers: {
        /**
         * Bearer AccessToken
         */
        Authorization?: string;
        /**
         * Application Identifier
         */
        'X-App-Id': string;
        /**
         * App Version
         */
        'X-App-Version': string;
        /**
         * Samsung,...
         */
        'X-Device-Family': string;
        /**
         * Unique Device/Web Identifier
         */
        'X-Device-Id': string;
        'X-Device-Locale': string;
        /**
         * android|ios|web
         */
        'X-Device-Os': string;
        'X-Device-Os-Version': string;
        /**
         * UserId Information
         */
        'X-User-Id'?: string;
    };
    path?: never;
    query?: never;
    url: '/openapp/ios/internal';
};

export type GetIosInternalUsingGetErrors = {
    /**
     * Unauthorized
     */
    401: unknown;
    /**
     * Forbidden
     */
    403: unknown;
    /**
     * Not Found
     */
    404: unknown;
};

export type GetIosInternalUsingGetResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type PemUsingGetData = {
    body?: never;
    headers: {
        /**
         * Bearer AccessToken
         */
        Authorization?: string;
        /**
         * Application Identifier
         */
        'X-App-Id': string;
        /**
         * App Version
         */
        'X-App-Version': string;
        /**
         * Samsung,...
         */
        'X-Device-Family': string;
        /**
         * Unique Device/Web Identifier
         */
        'X-Device-Id': string;
        'X-Device-Locale': string;
        /**
         * android|ios|web
         */
        'X-Device-Os': string;
        'X-Device-Os-Version': string;
        /**
         * UserId Information
         */
        'X-User-Id'?: string;
    };
    path?: never;
    query?: never;
    url: '/public/cert/pem';
};

export type PemUsingGetErrors = {
    /**
     * Unauthorized
     */
    401: unknown;
    /**
     * Forbidden
     */
    403: unknown;
    /**
     * Not Found
     */
    404: unknown;
};

export type PemUsingGetResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type InvalidLinkUsingGetData = {
    body?: never;
    headers: {
        /**
         * Bearer AccessToken
         */
        Authorization?: string;
        /**
         * Application Identifier
         */
        'X-App-Id': string;
        /**
         * App Version
         */
        'X-App-Version': string;
        /**
         * Samsung,...
         */
        'X-Device-Family': string;
        /**
         * Unique Device/Web Identifier
         */
        'X-Device-Id': string;
        'X-Device-Locale': string;
        /**
         * android|ios|web
         */
        'X-Device-Os': string;
        'X-Device-Os-Version': string;
        /**
         * UserId Information
         */
        'X-User-Id'?: string;
    };
    path?: never;
    query?: never;
    url: '/ui/invalid-link';
};

export type InvalidLinkUsingGetErrors = {
    /**
     * Unauthorized
     */
    401: unknown;
    /**
     * Forbidden
     */
    403: unknown;
    /**
     * Not Found
     */
    404: unknown;
};

export type InvalidLinkUsingGetResponses = {
    /**
     * OK
     */
    200: string;
};

export type InvalidLinkUsingGetResponse = InvalidLinkUsingGetResponses[keyof InvalidLinkUsingGetResponses];

export type InvitationSuccessUsingGetData = {
    body?: never;
    headers: {
        /**
         * Bearer AccessToken
         */
        Authorization?: string;
        /**
         * Application Identifier
         */
        'X-App-Id': string;
        /**
         * App Version
         */
        'X-App-Version': string;
        /**
         * Samsung,...
         */
        'X-Device-Family': string;
        /**
         * Unique Device/Web Identifier
         */
        'X-Device-Id': string;
        'X-Device-Locale': string;
        /**
         * android|ios|web
         */
        'X-Device-Os': string;
        'X-Device-Os-Version': string;
        /**
         * UserId Information
         */
        'X-User-Id'?: string;
    };
    path?: never;
    query: {
        /**
         * key
         */
        key: string;
    };
    url: '/ui/invitation-success';
};

export type InvitationSuccessUsingGetErrors = {
    /**
     * Unauthorized
     */
    401: unknown;
    /**
     * Forbidden
     */
    403: unknown;
    /**
     * Not Found
     */
    404: unknown;
};

export type InvitationSuccessUsingGetResponses = {
    /**
     * OK
     */
    200: string;
};

export type InvitationSuccessUsingGetResponse = InvitationSuccessUsingGetResponses[keyof InvitationSuccessUsingGetResponses];

export type ResetPasswordUsingGetData = {
    body?: never;
    headers: {
        /**
         * Bearer AccessToken
         */
        Authorization?: string;
        /**
         * Application Identifier
         */
        'X-App-Id': string;
        /**
         * App Version
         */
        'X-App-Version': string;
        /**
         * Samsung,...
         */
        'X-Device-Family': string;
        /**
         * Unique Device/Web Identifier
         */
        'X-Device-Id': string;
        'X-Device-Locale': string;
        /**
         * android|ios|web
         */
        'X-Device-Os': string;
        'X-Device-Os-Version': string;
        /**
         * UserId Information
         */
        'X-User-Id'?: string;
    };
    path?: never;
    query: {
        /**
         * key
         */
        key: string;
    };
    url: '/ui/reset-password';
};

export type ResetPasswordUsingGetErrors = {
    /**
     * Unauthorized
     */
    401: unknown;
    /**
     * Forbidden
     */
    403: unknown;
    /**
     * Not Found
     */
    404: unknown;
};

export type ResetPasswordUsingGetResponses = {
    /**
     * OK
     */
    200: string;
};

export type ResetPasswordUsingGetResponse = ResetPasswordUsingGetResponses[keyof ResetPasswordUsingGetResponses];

export type ResetPasswordPortalUsingGetData = {
    body?: never;
    headers: {
        /**
         * Bearer AccessToken
         */
        Authorization?: string;
        /**
         * Application Identifier
         */
        'X-App-Id': string;
        /**
         * App Version
         */
        'X-App-Version': string;
        /**
         * Samsung,...
         */
        'X-Device-Family': string;
        /**
         * Unique Device/Web Identifier
         */
        'X-Device-Id': string;
        'X-Device-Locale': string;
        /**
         * android|ios|web
         */
        'X-Device-Os': string;
        'X-Device-Os-Version': string;
        /**
         * UserId Information
         */
        'X-User-Id'?: string;
    };
    path?: never;
    query: {
        /**
         * key
         */
        key: string;
    };
    url: '/ui/reset-password-portal';
};

export type ResetPasswordPortalUsingGetErrors = {
    /**
     * Unauthorized
     */
    401: unknown;
    /**
     * Forbidden
     */
    403: unknown;
    /**
     * Not Found
     */
    404: unknown;
};

export type ResetPasswordPortalUsingGetResponses = {
    /**
     * OK
     */
    200: string;
};

export type ResetPasswordPortalUsingGetResponse = ResetPasswordPortalUsingGetResponses[keyof ResetPasswordPortalUsingGetResponses];

export type ResetPasswordPortalSuccessUsingGetData = {
    body?: never;
    headers: {
        /**
         * Bearer AccessToken
         */
        Authorization?: string;
        /**
         * Application Identifier
         */
        'X-App-Id': string;
        /**
         * App Version
         */
        'X-App-Version': string;
        /**
         * Samsung,...
         */
        'X-Device-Family': string;
        /**
         * Unique Device/Web Identifier
         */
        'X-Device-Id': string;
        'X-Device-Locale': string;
        /**
         * android|ios|web
         */
        'X-Device-Os': string;
        'X-Device-Os-Version': string;
        /**
         * UserId Information
         */
        'X-User-Id'?: string;
    };
    path?: never;
    query?: never;
    url: '/ui/reset-password-portal-success';
};

export type ResetPasswordPortalSuccessUsingGetErrors = {
    /**
     * Unauthorized
     */
    401: unknown;
    /**
     * Forbidden
     */
    403: unknown;
    /**
     * Not Found
     */
    404: unknown;
};

export type ResetPasswordPortalSuccessUsingGetResponses = {
    /**
     * OK
     */
    200: string;
};

export type ResetPasswordPortalSuccessUsingGetResponse = ResetPasswordPortalSuccessUsingGetResponses[keyof ResetPasswordPortalSuccessUsingGetResponses];

export type ResetPasswordSuccessUsingGetData = {
    body?: never;
    headers: {
        /**
         * Bearer AccessToken
         */
        Authorization?: string;
        /**
         * Application Identifier
         */
        'X-App-Id': string;
        /**
         * App Version
         */
        'X-App-Version': string;
        /**
         * Samsung,...
         */
        'X-Device-Family': string;
        /**
         * Unique Device/Web Identifier
         */
        'X-Device-Id': string;
        'X-Device-Locale': string;
        /**
         * android|ios|web
         */
        'X-Device-Os': string;
        'X-Device-Os-Version': string;
        /**
         * UserId Information
         */
        'X-User-Id'?: string;
    };
    path?: never;
    query?: never;
    url: '/ui/reset-password-success';
};

export type ResetPasswordSuccessUsingGetErrors = {
    /**
     * Unauthorized
     */
    401: unknown;
    /**
     * Forbidden
     */
    403: unknown;
    /**
     * Not Found
     */
    404: unknown;
};

export type ResetPasswordSuccessUsingGetResponses = {
    /**
     * OK
     */
    200: string;
};

export type ResetPasswordSuccessUsingGetResponse = ResetPasswordSuccessUsingGetResponses[keyof ResetPasswordSuccessUsingGetResponses];

export type VerificationSuccessUsingGetData = {
    body?: never;
    headers: {
        /**
         * Bearer AccessToken
         */
        Authorization?: string;
        /**
         * Application Identifier
         */
        'X-App-Id': string;
        /**
         * App Version
         */
        'X-App-Version': string;
        /**
         * Samsung,...
         */
        'X-Device-Family': string;
        /**
         * Unique Device/Web Identifier
         */
        'X-Device-Id': string;
        'X-Device-Locale': string;
        /**
         * android|ios|web
         */
        'X-Device-Os': string;
        'X-Device-Os-Version': string;
        /**
         * UserId Information
         */
        'X-User-Id'?: string;
    };
    path?: never;
    query?: never;
    url: '/ui/verification-success';
};

export type VerificationSuccessUsingGetErrors = {
    /**
     * Unauthorized
     */
    401: unknown;
    /**
     * Forbidden
     */
    403: unknown;
    /**
     * Not Found
     */
    404: unknown;
};

export type VerificationSuccessUsingGetResponses = {
    /**
     * OK
     */
    200: string;
};

export type VerificationSuccessUsingGetResponse = VerificationSuccessUsingGetResponses[keyof VerificationSuccessUsingGetResponses];

export type VerifyEmailUsingGetData = {
    body?: never;
    headers: {
        /**
         * Bearer AccessToken
         */
        Authorization?: string;
        /**
         * Application Identifier
         */
        'X-App-Id': string;
        /**
         * App Version
         */
        'X-App-Version': string;
        /**
         * Samsung,...
         */
        'X-Device-Family': string;
        /**
         * Unique Device/Web Identifier
         */
        'X-Device-Id': string;
        'X-Device-Locale': string;
        /**
         * android|ios|web
         */
        'X-Device-Os': string;
        'X-Device-Os-Version': string;
        /**
         * UserId Information
         */
        'X-User-Id'?: string;
    };
    path?: never;
    query: {
        /**
         * key
         */
        key: string;
    };
    url: '/ui/verify-email';
};

export type VerifyEmailUsingGetErrors = {
    /**
     * Unauthorized
     */
    401: unknown;
    /**
     * Forbidden
     */
    403: unknown;
    /**
     * Not Found
     */
    404: unknown;
};

export type VerifyEmailUsingGetResponses = {
    /**
     * OK
     */
    200: string;
};

export type VerifyEmailUsingGetResponse = VerifyEmailUsingGetResponses[keyof VerifyEmailUsingGetResponses];

export type VerifyInvitationUsingGetData = {
    body?: never;
    headers: {
        /**
         * Bearer AccessToken
         */
        Authorization?: string;
        /**
         * Application Identifier
         */
        'X-App-Id': string;
        /**
         * App Version
         */
        'X-App-Version': string;
        /**
         * Samsung,...
         */
        'X-Device-Family': string;
        /**
         * Unique Device/Web Identifier
         */
        'X-Device-Id': string;
        'X-Device-Locale': string;
        /**
         * android|ios|web
         */
        'X-Device-Os': string;
        'X-Device-Os-Version': string;
        /**
         * UserId Information
         */
        'X-User-Id'?: string;
    };
    path?: never;
    query: {
        /**
         * key
         */
        key: string;
    };
    url: '/ui/verify-invitation';
};

export type VerifyInvitationUsingGetErrors = {
    /**
     * Unauthorized
     */
    401: unknown;
    /**
     * Forbidden
     */
    403: unknown;
    /**
     * Not Found
     */
    404: unknown;
};

export type VerifyInvitationUsingGetResponses = {
    /**
     * OK
     */
    200: string;
};

export type VerifyInvitationUsingGetResponse = VerifyInvitationUsingGetResponses[keyof VerifyInvitationUsingGetResponses];

export type ClientOptions = {
    baseURL: `${string}://dev-oauth.proxy.simplifi.io` | (string & {});
};